package fr.supelec.tesl.lang.ui.run;

import com.google.inject.Inject;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.debug.core.ILaunch;
import org.eclipse.debug.core.ILaunchConfiguration;
import org.eclipse.debug.core.model.ILaunchConfigurationDelegate;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.resource.XtextResourceSet;
import org.eclipse.xtext.xbase.lib.Extension;

public class LaunchTESLSimulation implements ILaunchConfigurationDelegate {
  private static TESLSpec spec = null;

  @Extension
  private static LetExtensions letExt = null;

  @Extension
  private static ClockExtensions clockExt = null;

  @Extension
  private static RelationExtensions relExt = null;

  @Extension
  private static PragmaExtensions pragExt = null;

  private static OutputFormatRegistrar registrar /* Skipped initializer because of errors */;

  private static final int majorversion = 1;

  private static final int minorversion = 2;

  private static final int releaseversion = 1;

  private static final Object version /* Skipped initializer because of errors */;

  public static Object getVersion() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field version is undefined");
  }

  @Inject
  private XtextResourceSet resourceSet;

  public void launch(final ILaunchConfiguration configuration, final /* String */Object mode, final ILaunch launch, final IProgressMonitor monitor) throws CoreException {
    throw new Error("Unresolved compilation problems:"
      + "\nString cannot be resolved to a type."
      + "\nThe method or field configuration is undefined"
      + "\nThe method or field configuration is undefined"
      + "\nThe method or field System is undefined"
      + "\nThe method or field resourceSet is undefined"
      + "\nThe method runTESL(Object, Object, Object) is undefined"
      + "\nThe method or field resourceSet is undefined"
      + "\nATTR_FILE cannot be resolved"
      + "\nATTR_MAXSTEPS cannot be resolved"
      + "\nDEFAULT_MAXSTEPS cannot be resolved"
      + "\nout cannot be resolved"
      + "\nprintln cannot be resolved"
      + "\n+ cannot be resolved");
  }

  public static void runTESL(final XtextResourceSet resourceSet, final /* String */Object fileName, final int maxSteps) {
    throw new Error("Unresolved compilation problems:"
      + "\nException cannot be resolved to a type."
      + "\nException cannot be resolved to a type."
      + "\nThrowable cannot be resolved to a type."
      + "\nString cannot be resolved to a type."
      + "\nException cannot be resolved to a type."
      + "\nNumber cannot be resolved to a type."
      + "\nUnsupportedEncodingException cannot be resolved to a type."
      + "\nThe method spec(TESLSpec) is undefined"
      + "\nThe method or field resourceSet is undefined"
      + "\nThe method or field fileName is undefined"
      + "\nThe method or field maxSteps is undefined"
      + "\nThe method letExt(LetExtensions) is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method clockExt(ClockExtensions) is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method relExt(RelationExtensions) is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method pragExt(PragmaExtensions) is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method getVersion() is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method process() is undefined for the type DoubleCalcPragma"
      + "\nThe method or field spec is undefined"
      + "\nThe method process() is undefined for the type Let"
      + "\nThe method or field spec is undefined"
      + "\nThe method process() is undefined for the type Clock"
      + "\n== cannot be resolved."
      + "\nThe method or field System is undefined"
      + "\nThe method or field System is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field System is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method process() is undefined for the type Relation"
      + "\nThe method or field spec is undefined"
      + "\nThe method process() is undefined for the type Pragma"
      + "\nThe method or field System is undefined"
      + "\nThe method or field System is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field System is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\n!= cannot be resolved."
      + "\nHashSet cannot be resolved."
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\n!= cannot be resolved."
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field System is undefined"
      + "\nThe method or field System is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nByteArrayOutputStream cannot be resolved."
      + "\nPrintStream cannot be resolved."
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe method or field spec is undefined"
      + "\nThe constructor TESLSpec(XtextResourceSet, String, int) refers to the missing type String"
      + "\nThe type Tick is not generic; it cannot be parameterized with arguments <? >"
      + "\nThe type Tick is not generic; it cannot be parameterized with arguments <? >"
      + "\nNo exception of type Throwable can be thrown; an exception type must be a subclass of Throwable"
      + "\nThe method console(MessageConsoleStream, String) from the type TESLSpec refers to the missing type String"
      + "\nThe method getErr() from the type TESLSpec refers to the missing type Object"
      + "\nThe method console(MessageConsoleStream, String) from the type TESLSpec refers to the missing type String"
      + "\nThe method getErr() from the type TESLSpec refers to the missing type Object"
      + "\nThe method console(MessageConsoleStream, String) from the type TESLSpec refers to the missing type String"
      + "\nThe method getErr() from the type TESLSpec refers to the missing type Object"
      + "\nThe method console(MessageConsoleStream, String) from the type TESLSpec refers to the missing type String"
      + "\nThe method getErr() from the type TESLSpec refers to the missing type Object"
      + "\nThe method console(MessageConsoleStream, String) from the type TESLSpec refers to the missing type String"
      + "\nThe method getOut() from the type TESLSpec refers to the missing type Object"
      + "\nThe method getTicks() from the type TESLSpec refers to the missing type Object"
      + "\nThe method console(MessageConsoleStream, String) from the type TESLSpec refers to the missing type String"
      + "\nThe method getOut() from the type TESLSpec refers to the missing type Object"
      + "\nThe method getTags() from the type TESLSpec refers to the missing type Object"
      + "\nThe method getTicks() from the type TESLSpec refers to the missing type Object"
      + "\nThe method console(MessageConsoleStream, String) from the type TESLSpec refers to the missing type String"
      + "\nThe method getOut() from the type TESLSpec refers to the missing type Object"
      + "\nThe method console(MessageConsoleStream, String) from the type TESLSpec refers to the missing type String"
      + "\nThe method getOut() from the type TESLSpec refers to the missing type Object"
      + "\nThe method closeLog() from the type TESLSpec refers to the missing type Object"
      + "\nThe method getOutputFormats() from the type TESLSpec refers to the missing type Object"
      + "\nThe method consoleOnly(MessageConsoleStream, String) from the type TESLSpec refers to the missing type Object"
      + "\nThe method getOut() from the type TESLSpec refers to the missing type Object"
      + "\nThe method getOutputFormats() from the type TESLSpec refers to the missing type Object"
      + "\nThe method outputFormat(String) from the type TESLSpec refers to the missing type Object"
      + "\nThe method consoleOnly(MessageConsoleStream, String) from the type TESLSpec refers to the missing type Object"
      + "\nThe method getErr() from the type TESLSpec refers to the missing type Object"
      + "\nThe method unload() from the type TESLSpec refers to the missing type Object"
      + "\nNo exception of type Exception can be thrown; an exception type must be a subclass of Throwable"
      + "\nThe method getErr() from the type TESLSpec refers to the missing type Object"
      + "\nThe method consoleOnly(MessageConsoleStream, String) from the type TESLSpec refers to the missing type Object"
      + "\nThe method getErr() from the type TESLSpec refers to the missing type Object"
      + "\nThe method consoleOnly(MessageConsoleStream, String) from the type TESLSpec refers to the missing type Object"
      + "\nThe method getErr() from the type TESLSpec refers to the missing type Object"
      + "\nNo exception of type UnsupportedEncodingException can be thrown; an exception type must be a subclass of Throwable"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngetVersion cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nresetDefaults cannot be resolved"
      + "\nTFLOAT cannot be resolved"
      + "\nout cannot be resolved"
      + "\nprintln cannot be resolved"
      + "\nout cannot be resolved"
      + "\nprintln cannot be resolved"
      + "\nout cannot be resolved"
      + "\nprintln cannot be resolved"
      + "\nout cannot be resolved"
      + "\nprintln cannot be resolved"
      + "\nout cannot be resolved"
      + "\nprintln cannot be resolved"
      + "\nout cannot be resolved"
      + "\nprintln cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nnumDigits cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nroundingMode cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nsolve cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ngetClocks cannot be resolved"
      + "\ngetNowTick cannot be resolved"
      + "\nadd cannot be resolved"
      + "\ngetName cannot be resolved"
      + "\nremoveNowTicks cannot be resolved"
      + "\nhasFuture cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngetCurrentTagValue_erased cannot be resolved"
      + "\ndoubleValue cannot be resolved"
      + "\nmessage cannot be resolved"
      + "\n!= cannot be resolved"
      + "\ngetMessage cannot be resolved"
      + "\nprintStackTrace cannot be resolved"
      + "\nsize cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nget cannot be resolved"
      + "\nget cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nsize cannot be resolved"
      + "\n== cannot be resolved"
      + "\ngetHandler cannot be resolved"
      + "\nname cannot be resolved"
      + "\n== cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nname cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nwrite cannot be resolved"
      + "\nDEPTH_INFINITE cannot be resolved"
      + "\nout cannot be resolved"
      + "\nprintln cannot be resolved"
      + "\nprintStackTrace cannot be resolved"
      + "\nout cannot be resolved"
      + "\n!= cannot be resolved"
      + "\nprintStackTrace cannot be resolved"
      + "\ntoString cannot be resolved"
      + "\nprintStackTrace cannot be resolved");
  }

  private static void printTree(final EObject o, final int level) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field level is undefined"
      + "\nThe method or field System is undefined"
      + "\nThe method or field System is undefined"
      + "\nThe method or field o is undefined"
      + "\nThe method or field o is undefined"
      + "\nThe method printTree(EObject, Object) is undefined"
      + "\nThe method or field level is undefined"
      + "\nout cannot be resolved"
      + "\nprint cannot be resolved"
      + "\nout cannot be resolved"
      + "\nprintln cannot be resolved"
      + "\ngetSimpleName cannot be resolved");
  }
}
