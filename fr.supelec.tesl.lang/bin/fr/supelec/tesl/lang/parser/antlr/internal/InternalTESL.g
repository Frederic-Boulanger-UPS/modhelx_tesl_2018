/*
 * generated by Xtext
 */
grammar InternalTESL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package fr.supelec.tesl.lang.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.supelec.tesl.lang.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.supelec.tesl.lang.services.TESLGrammarAccess;

}

@parser::members {

 	private TESLGrammarAccess grammarAccess;
 	
    public InternalTESLParser(TokenStream input, TESLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Specification";	
   	}
   	
   	@Override
   	protected TESLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSpecification
entryRuleSpecification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecificationRule()); }
	 iv_ruleSpecification=ruleSpecification 
	 { $current=$iv_ruleSpecification.current; } 
	 EOF 
;

// Rule Specification
ruleSpecification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificationAccess().getDeclClockParserRuleCall_0_0()); 
	    }
		lv_decl_0_0=ruleClock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificationRule());
	        }
       		add(
       			$current, 
       			"decl",
        		lv_decl_0_0, 
        		"fr.supelec.tesl.lang.TESL.Clock");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificationAccess().getRelRelationParserRuleCall_1_0()); 
	    }
		lv_rel_1_0=ruleRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificationRule());
	        }
       		add(
       			$current, 
       			"rel",
        		lv_rel_1_0, 
        		"fr.supelec.tesl.lang.TESL.Relation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificationAccess().getLetLetParserRuleCall_2_0()); 
	    }
		lv_let_2_0=ruleLet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificationRule());
	        }
       		add(
       			$current, 
       			"let",
        		lv_let_2_0, 
        		"fr.supelec.tesl.lang.TESL.Let");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificationAccess().getPragmasPragmaParserRuleCall_3_0()); 
	    }
		lv_pragmas_3_0=rulePragma		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificationRule());
	        }
       		add(
       			$current, 
       			"pragmas",
        		lv_pragmas_3_0, 
        		"fr.supelec.tesl.lang.TESL.Pragma");
	        afterParserOrEnumRuleCall();
	    }

)
))*
;





// Entry rule entryRuleClock
entryRuleClock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClockRule()); }
	 iv_ruleClock=ruleClock 
	 { $current=$iv_ruleClock.current; } 
	 EOF 
;

// Rule Clock
ruleClock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_nongreedy_0_0=	'nongreedy' 
    {
        newLeafNode(lv_nongreedy_0_0, grammarAccess.getClockAccess().getNongreedyNongreedyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClockRule());
	        }
       		setWithLastConsumed($current, "nongreedy", true, "nongreedy");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClockAccess().getTypeTypeEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClockRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"fr.supelec.tesl.lang.TESL.Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getClockAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"fr.supelec.tesl.lang.TESL.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClockAccess().getQualClockQualifierParserRuleCall_3_0()); 
	    }
		lv_qual_3_0=ruleClockQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClockRule());
	        }
       		set(
       			$current, 
       			"qual",
        		lv_qual_3_0, 
        		"fr.supelec.tesl.lang.TESL.ClockQualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleClockQualifier
entryRuleClockQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClockQualifierRule()); }
	 iv_ruleClockQualifier=ruleClockQualifier 
	 { $current=$iv_ruleClockQualifier.current; } 
	 EOF 
;

// Rule ClockQualifier
ruleClockQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getClockQualifierAccess().getPeriodicQualifierParserRuleCall_0()); 
    }
    this_PeriodicQualifier_0=rulePeriodicQualifier
    { 
        $current = $this_PeriodicQualifier_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getClockQualifierAccess().getSporadicQualifierParserRuleCall_1()); 
    }
    this_SporadicQualifier_1=ruleSporadicQualifier
    { 
        $current = $this_SporadicQualifier_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePeriodicQualifier
entryRulePeriodicQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPeriodicQualifierRule()); }
	 iv_rulePeriodicQualifier=rulePeriodicQualifier 
	 { $current=$iv_rulePeriodicQualifier.current; } 
	 EOF 
;

// Rule PeriodicQualifier
rulePeriodicQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='periodic' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPeriodicQualifierAccess().getPeriodicKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicQualifierAccess().getPeriodExpressionParserRuleCall_1_0()); 
	    }
		lv_period_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicQualifierRule());
	        }
       		set(
       			$current, 
       			"period",
        		lv_period_1_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='offset' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPeriodicQualifierAccess().getOffsetKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicQualifierAccess().getOffsetExpressionParserRuleCall_2_1_0()); 
	    }
		lv_offset_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicQualifierRule());
	        }
       		set(
       			$current, 
       			"offset",
        		lv_offset_3_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleSporadicQualifier
entryRuleSporadicQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSporadicQualifierRule()); }
	 iv_ruleSporadicQualifier=ruleSporadicQualifier 
	 { $current=$iv_ruleSporadicQualifier.current; } 
	 EOF 
;

// Rule SporadicQualifier
ruleSporadicQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSporadicQualifierAccess().getSporadicQualifierAction_0(),
            $current);
    }
)	otherlv_1='sporadic' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSporadicQualifierAccess().getSporadicKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSporadicQualifierAccess().getInstantsValueParserRuleCall_2_0_0()); 
	    }
		lv_instants_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSporadicQualifierRule());
	        }
       		add(
       			$current, 
       			"instants",
        		lv_instants_2_0, 
        		"fr.supelec.tesl.lang.TESL.Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSporadicQualifierAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSporadicQualifierAccess().getInstantsExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_instants_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSporadicQualifierRule());
	        }
       		add(
       			$current, 
       			"instants",
        		lv_instants_4_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	 iv_ruleRelation=ruleRelation 
	 { $current=$iv_ruleRelation.current; } 
	 EOF 
;

// Rule Relation
ruleRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRelationAccess().getImplicationRelationParserRuleCall_0()); 
    }
    this_ImplicationRelation_0=ruleImplicationRelation
    { 
        $current = $this_ImplicationRelation_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationAccess().getTagRelationParserRuleCall_1()); 
    }
    this_TagRelation_1=ruleTagRelation
    { 
        $current = $this_TagRelation_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationAccess().getAwaitImplicationParserRuleCall_2()); 
    }
    this_AwaitImplication_2=ruleAwaitImplication
    { 
        $current = $this_AwaitImplication_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleImplicationRelation
entryRuleImplicationRelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImplicationRelationRule()); }
	 iv_ruleImplicationRelation=ruleImplicationRelation 
	 { $current=$iv_ruleImplicationRelation.current; } 
	 EOF 
;

// Rule ImplicationRelation
ruleImplicationRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImplicationRelationRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getImplicationRelationAccess().getSourceClockCrossReference_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getImplicationRelationAccess().getQualImplicationQualifierParserRuleCall_1_0()); 
	    }
		lv_qual_1_0=ruleImplicationQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplicationRelationRule());
	        }
       		set(
       			$current, 
       			"qual",
        		lv_qual_1_0, 
        		"fr.supelec.tesl.lang.TESL.ImplicationQualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2='implies' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImplicationRelationAccess().getImpliesKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImplicationRelationRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getImplicationRelationAccess().getTargetClockCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleAwaitImplication
entryRuleAwaitImplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAwaitImplicationRule()); }
	 iv_ruleAwaitImplication=ruleAwaitImplication 
	 { $current=$iv_ruleAwaitImplication.current; } 
	 EOF 
;

// Rule AwaitImplication
ruleAwaitImplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='await' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAwaitImplicationAccess().getAwaitKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAwaitImplicationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getAwaitImplicationAccess().getMastersClockCrossReference_1_0()); 
	}

)
)+(	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAwaitImplicationAccess().getWithKeyword_2_0());
    }
((
(
		lv_weak_3_0=	'weak' 
    {
        newLeafNode(lv_weak_3_0, grammarAccess.getAwaitImplicationAccess().getWeakWeakKeyword_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAwaitImplicationRule());
	        }
       		setWithLastConsumed($current, "weak", true, "weak");
	    }

)
)
    |(
(
		lv_strong_4_0=	'strong' 
    {
        newLeafNode(lv_strong_4_0, grammarAccess.getAwaitImplicationAccess().getStrongStrongKeyword_2_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAwaitImplicationRule());
	        }
       		setWithLastConsumed($current, "strong", true, "strong");
	    }

)
))	otherlv_5='reset' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAwaitImplicationAccess().getResetKeyword_2_2());
    }
	otherlv_6='on' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAwaitImplicationAccess().getOnKeyword_2_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAwaitImplicationRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getAwaitImplicationAccess().getResetClockCrossReference_2_4_0()); 
	}

)
))?	otherlv_8='implies' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAwaitImplicationAccess().getImpliesKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAwaitImplicationRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getAwaitImplicationAccess().getTargetClockCrossReference_4_0()); 
	}

)
))
;





// Entry rule entryRuleImplicationQualifier
entryRuleImplicationQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImplicationQualifierRule()); }
	 iv_ruleImplicationQualifier=ruleImplicationQualifier 
	 { $current=$iv_ruleImplicationQualifier.current; } 
	 EOF 
;

// Rule ImplicationQualifier
ruleImplicationQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getImplicationQualifierAccess().getFilteredQualifierParserRuleCall_0()); 
    }
    this_FilteredQualifier_0=ruleFilteredQualifier
    { 
        $current = $this_FilteredQualifier_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getImplicationQualifierAccess().getEveryQualifierParserRuleCall_1()); 
    }
    this_EveryQualifier_1=ruleEveryQualifier
    { 
        $current = $this_EveryQualifier_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getImplicationQualifierAccess().getDelayedQualifierParserRuleCall_2()); 
    }
    this_DelayedQualifier_2=ruleDelayedQualifier
    { 
        $current = $this_DelayedQualifier_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getImplicationQualifierAccess().getSustainedQualifierParserRuleCall_3()); 
    }
    this_SustainedQualifier_3=ruleSustainedQualifier
    { 
        $current = $this_SustainedQualifier_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getImplicationQualifierAccess().getTimeDelayedQualifierParserRuleCall_4()); 
    }
    this_TimeDelayedQualifier_4=ruleTimeDelayedQualifier
    { 
        $current = $this_TimeDelayedQualifier_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getImplicationQualifierAccess().getWhenQualifierParserRuleCall_5()); 
    }
    this_WhenQualifier_5=ruleWhenQualifier
    { 
        $current = $this_WhenQualifier_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getImplicationQualifierAccess().getNextQualifierParserRuleCall_6()); 
    }
    this_NextQualifier_6=ruleNextQualifier
    { 
        $current = $this_NextQualifier_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFilteredQualifier
entryRuleFilteredQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFilteredQualifierRule()); }
	 iv_ruleFilteredQualifier=ruleFilteredQualifier 
	 { $current=$iv_ruleFilteredQualifier.current; } 
	 EOF 
;

// Rule FilteredQualifier
ruleFilteredQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='filtered' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFilteredQualifierAccess().getFilteredKeyword_0());
    }
	otherlv_1='by' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFilteredQualifierAccess().getByKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFilteredQualifierAccess().getPatternPatternParserRuleCall_2_0()); 
	    }
		lv_pattern_2_0=rulePattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilteredQualifierRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_2_0, 
        		"fr.supelec.tesl.lang.TESL.Pattern");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEveryQualifier
entryRuleEveryQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEveryQualifierRule()); }
	 iv_ruleEveryQualifier=ruleEveryQualifier 
	 { $current=$iv_ruleEveryQualifier.current; } 
	 EOF 
;

// Rule EveryQualifier
ruleEveryQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='every' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEveryQualifierAccess().getEveryKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEveryQualifierAccess().getPeriodExpressionParserRuleCall_1_0()); 
	    }
		lv_period_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEveryQualifierRule());
	        }
       		set(
       			$current, 
       			"period",
        		lv_period_1_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_off_2_0=	'starting' 
    {
        newLeafNode(lv_off_2_0, grammarAccess.getEveryQualifierAccess().getOffStartingKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEveryQualifierRule());
	        }
       		setWithLastConsumed($current, "off", true, "starting");
	    }

)
)	otherlv_3='at' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEveryQualifierAccess().getAtKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEveryQualifierAccess().getOffsetExpressionParserRuleCall_2_2_0()); 
	    }
		lv_offset_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEveryQualifierRule());
	        }
       		set(
       			$current, 
       			"offset",
        		lv_offset_4_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleDelayedQualifier
entryRuleDelayedQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDelayedQualifierRule()); }
	 iv_ruleDelayedQualifier=ruleDelayedQualifier 
	 { $current=$iv_ruleDelayedQualifier.current; } 
	 EOF 
;

// Rule DelayedQualifier
ruleDelayedQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_immediately_0_0=	'immediately' 
    {
        newLeafNode(lv_immediately_0_0, grammarAccess.getDelayedQualifierAccess().getImmediatelyImmediatelyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDelayedQualifierRule());
	        }
       		setWithLastConsumed($current, "immediately", true, "immediately");
	    }

)
)?	otherlv_1='delayed' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDelayedQualifierAccess().getDelayedKeyword_1());
    }
	otherlv_2='by' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDelayedQualifierAccess().getByKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDelayedQualifierAccess().getCountExpressionParserRuleCall_3_0()); 
	    }
		lv_count_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelayedQualifierRule());
	        }
       		set(
       			$current, 
       			"count",
        		lv_count_3_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_reset_4_0=	'with' 
    {
        newLeafNode(lv_reset_4_0, grammarAccess.getDelayedQualifierAccess().getResetWithKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDelayedQualifierRule());
	        }
       		setWithLastConsumed($current, "reset", true, "with");
	    }

)
)	otherlv_5='reset' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDelayedQualifierAccess().getResetKeyword_4_1());
    }
)?	otherlv_6='on' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDelayedQualifierAccess().getOnKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDelayedQualifierRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getDelayedQualifierAccess().getClockClockCrossReference_6_0()); 
	}

)
))
;





// Entry rule entryRuleSustainedQualifier
entryRuleSustainedQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSustainedQualifierRule()); }
	 iv_ruleSustainedQualifier=ruleSustainedQualifier 
	 { $current=$iv_ruleSustainedQualifier.current; } 
	 EOF 
;

// Rule SustainedQualifier
ruleSustainedQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='sustained' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSustainedQualifierAccess().getSustainedKeyword_0());
    }
(
(
		lv_immediately_1_0=	'immediately' 
    {
        newLeafNode(lv_immediately_1_0, grammarAccess.getSustainedQualifierAccess().getImmediatelyImmediatelyKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSustainedQualifierRule());
	        }
       		setWithLastConsumed($current, "immediately", true, "immediately");
	    }

)
)?	otherlv_2='from' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSustainedQualifierAccess().getFromKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSustainedQualifierRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getSustainedQualifierAccess().getStartClockClockCrossReference_3_0()); 
	}

)
)	otherlv_4='to' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSustainedQualifierAccess().getToKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSustainedQualifierRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getSustainedQualifierAccess().getEndClockClockCrossReference_5_0()); 
	}

)
)(
(
		lv_weakly_6_0=	'weakly' 
    {
        newLeafNode(lv_weakly_6_0, grammarAccess.getSustainedQualifierAccess().getWeaklyWeaklyKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSustainedQualifierRule());
	        }
       		setWithLastConsumed($current, "weakly", true, "weakly");
	    }

)
)?)
;





// Entry rule entryRuleTimeDelayedQualifier
entryRuleTimeDelayedQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeDelayedQualifierRule()); }
	 iv_ruleTimeDelayedQualifier=ruleTimeDelayedQualifier 
	 { $current=$iv_ruleTimeDelayedQualifier.current; } 
	 EOF 
;

// Rule TimeDelayedQualifier
ruleTimeDelayedQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='time' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTimeDelayedQualifierAccess().getTimeKeyword_0());
    }
	otherlv_1='delayed' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTimeDelayedQualifierAccess().getDelayedKeyword_1());
    }
	otherlv_2='by' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTimeDelayedQualifierAccess().getByKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeDelayedQualifierAccess().getDelayExpressionParserRuleCall_3_0()); 
	    }
		lv_delay_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeDelayedQualifierRule());
	        }
       		set(
       			$current, 
       			"delay",
        		lv_delay_3_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='on' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTimeDelayedQualifierAccess().getOnKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeDelayedQualifierRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getTimeDelayedQualifierAccess().getClockClockCrossReference_5_0()); 
	}

)
)((
(
		lv_reset_6_0=	'with' 
    {
        newLeafNode(lv_reset_6_0, grammarAccess.getTimeDelayedQualifierAccess().getResetWithKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeDelayedQualifierRule());
	        }
       		setWithLastConsumed($current, "reset", true, "with");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1(), 0);
	 				}
					({true}?=>(
(
		lv_immReset_8_0=	'immediate' 
    {
        newLeafNode(lv_immReset_8_0, grammarAccess.getTimeDelayedQualifierAccess().getImmResetImmediateKeyword_6_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeDelayedQualifierRule());
	        }
       		setWithLastConsumed($current, "immReset", true, "immediate");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1(), 1);
	 				}
					({true}?=>(
(
		lv_strongReset_9_0=	'strong' 
    {
        newLeafNode(lv_strongReset_9_0, grammarAccess.getTimeDelayedQualifierAccess().getStrongResetStrongKeyword_6_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeDelayedQualifierRule());
	        }
       		setWithLastConsumed($current, "strongReset", true, "strong");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1());
	}

)	otherlv_10='reset' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTimeDelayedQualifierAccess().getResetKeyword_6_2());
    }
	otherlv_11='on' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTimeDelayedQualifierAccess().getOnKeyword_6_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeDelayedQualifierRule());
	        }
        }
	otherlv_12=RULE_ID
	{
		newLeafNode(otherlv_12, grammarAccess.getTimeDelayedQualifierAccess().getResetClockClockCrossReference_6_4_0()); 
	}

)
))?)
;





// Entry rule entryRuleLet
entryRuleLet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLetRule()); }
	 iv_ruleLet=ruleLet 
	 { $current=$iv_ruleLet.current; } 
	 EOF 
;

// Rule Let
ruleLet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='let' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLetAccess().getLetKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLetAccess().getTypeValueTypeEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleValueType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLetRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"fr.supelec.tesl.lang.TESL.ValueType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getLetAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"fr.supelec.tesl.lang.TESL.ID");
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLetAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLetAccess().getValueExpressionParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLetRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current; } 
	 EOF 
;

// Rule Value
ruleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getValueAccess().getIntegerValueParserRuleCall_0()); 
    }
    this_IntegerValue_0=ruleIntegerValue
    { 
        $current = $this_IntegerValue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getDecimalValueParserRuleCall_1()); 
    }
    this_DecimalValue_1=ruleDecimalValue
    { 
        $current = $this_DecimalValue_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getFloatValueParserRuleCall_2()); 
    }
    this_FloatValue_2=ruleFloatValue
    { 
        $current = $this_FloatValue_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getRationalValueParserRuleCall_3()); 
    }
    this_RationalValue_3=ruleRationalValue
    { 
        $current = $this_RationalValue_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getLetValueParserRuleCall_4()); 
    }
    this_LetValue_4=ruleLetValue
    { 
        $current = $this_LetValue_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntegerValue
entryRuleIntegerValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerValueRule()); }
	 iv_ruleIntegerValue=ruleIntegerValue 
	 { $current=$iv_ruleIntegerValue.current; } 
	 EOF 
;

// Rule IntegerValue
ruleIntegerValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerValueAccess().getSignOpTermEnumRuleCall_0_0()); 
	    }
		lv_sign_0_0=ruleOpTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerValueRule());
	        }
       		set(
       			$current, 
       			"sign",
        		lv_sign_0_0, 
        		"fr.supelec.tesl.lang.TESL.OpTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_1_0=RULE_BIG_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getIntegerValueAccess().getValueBIG_INTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"fr.supelec.tesl.lang.TESL.BIG_INT");
	    }

)
))
;





// Entry rule entryRuleDecimalValue
entryRuleDecimalValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDecimalValueRule()); }
	 iv_ruleDecimalValue=ruleDecimalValue 
	 { $current=$iv_ruleDecimalValue.current; } 
	 EOF 
;

// Rule DecimalValue
ruleDecimalValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDecimalValueAccess().getSignOpTermEnumRuleCall_0_0()); 
	    }
		lv_sign_0_0=ruleOpTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDecimalValueRule());
	        }
       		set(
       			$current, 
       			"sign",
        		lv_sign_0_0, 
        		"fr.supelec.tesl.lang.TESL.OpTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_1_0=RULE_BIG_DECIMAL
		{
			newLeafNode(lv_value_1_0, grammarAccess.getDecimalValueAccess().getValueBIG_DECIMALTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDecimalValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"fr.supelec.tesl.lang.TESL.BIG_DECIMAL");
	    }

)
))
;





// Entry rule entryRuleFloatValue
entryRuleFloatValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFloatValueRule()); }
	 iv_ruleFloatValue=ruleFloatValue 
	 { $current=$iv_ruleFloatValue.current; } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFloatValueAccess().getSignOpTermEnumRuleCall_0_0()); 
	    }
		lv_sign_0_0=ruleOpTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFloatValueRule());
	        }
       		set(
       			$current, 
       			"sign",
        		lv_sign_0_0, 
        		"fr.supelec.tesl.lang.TESL.OpTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_1_0=RULE_FLOAT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFloatValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"fr.supelec.tesl.lang.TESL.FLOAT");
	    }

)
))
;





// Entry rule entryRuleRationalValue
entryRuleRationalValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRationalValueRule()); }
	 iv_ruleRationalValue=ruleRationalValue 
	 { $current=$iv_ruleRationalValue.current; } 
	 EOF 
;

// Rule RationalValue
ruleRationalValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRationalValueAccess().getSignOpTermEnumRuleCall_0_0()); 
	    }
		lv_sign_0_0=ruleOpTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRationalValueRule());
	        }
       		set(
       			$current, 
       			"sign",
        		lv_sign_0_0, 
        		"fr.supelec.tesl.lang.TESL.OpTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_1_0=RULE_RATIONAL
		{
			newLeafNode(lv_value_1_0, grammarAccess.getRationalValueAccess().getValueRATIONALTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRationalValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"fr.supelec.tesl.lang.TESL.RATIONAL");
	    }

)
))
;





// Entry rule entryRuleLetValue
entryRuleLetValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLetValueRule()); }
	 iv_ruleLetValue=ruleLetValue 
	 { $current=$iv_ruleLetValue.current; } 
	 EOF 
;

// Rule LetValue
ruleLetValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='$' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLetValueAccess().getDollarSignKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLetValueRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getLetValueAccess().getRefLetCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getTermParserRuleCall()); 
    }
    this_Term_0=ruleTerm
    { 
        $current = $this_Term_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	 iv_ruleTerm=ruleTerm 
	 { $current=$iv_ruleTerm.current; } 
	 EOF 
;

// Rule Term
ruleTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); 
    }
    this_Factor_0=ruleFactor
    { 
        $current = $this_Factor_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTermAccess().getBinOpLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getOpOpTermEnumRuleCall_1_1_0()); 
	    }
		lv_op_2_0=ruleOpTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"fr.supelec.tesl.lang.TESL.OpTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleFactor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"fr.supelec.tesl.lang.TESL.Factor");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	 iv_ruleFactor=ruleFactor 
	 { $current=$iv_ruleFactor.current; } 
	 EOF 
;

// Rule Factor
ruleFactor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFactorAccess().getBasicExprParserRuleCall_0()); 
    }
    this_BasicExpr_0=ruleBasicExpr
    { 
        $current = $this_BasicExpr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFactorAccess().getBinOpLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFactorAccess().getOpOpFactEnumRuleCall_1_1_0()); 
	    }
		lv_op_2_0=ruleOpFact		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFactorRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"fr.supelec.tesl.lang.TESL.OpFact");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFactorAccess().getRightBasicExprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleBasicExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFactorRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"fr.supelec.tesl.lang.TESL.BasicExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleBasicExpr
entryRuleBasicExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicExprRule()); }
	 iv_ruleBasicExpr=ruleBasicExpr 
	 { $current=$iv_ruleBasicExpr.current; } 
	 EOF 
;

// Rule BasicExpr
ruleBasicExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBasicExprAccess().getValueParserRuleCall_0()); 
    }
    this_Value_0=ruleValue
    { 
        $current = $this_Value_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBasicExprAccess().getLeftParenthesisKeyword_1_0());
    }

    { 
        newCompositeNode(grammarAccess.getBasicExprAccess().getExpressionParserRuleCall_1_1()); 
    }
    this_Expression_2=ruleExpression
    { 
        $current = $this_Expression_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBasicExprAccess().getRightParenthesisKeyword_1_2());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getBasicExprAccess().getCastParserRuleCall_2()); 
    }
    this_Cast_4=ruleCast
    { 
        $current = $this_Cast_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCast
entryRuleCast returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCastRule()); }
	 iv_ruleCast=ruleCast 
	 { $current=$iv_ruleCast.current; } 
	 EOF 
;

// Rule Cast
ruleCast returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCastAccess().getIntCastParserRuleCall_0()); 
    }
    this_IntCast_0=ruleIntCast
    { 
        $current = $this_IntCast_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCastAccess().getDecimalCastParserRuleCall_1()); 
    }
    this_DecimalCast_1=ruleDecimalCast
    { 
        $current = $this_DecimalCast_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCastAccess().getFloatCastParserRuleCall_2()); 
    }
    this_FloatCast_2=ruleFloatCast
    { 
        $current = $this_FloatCast_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCastAccess().getRationalCastParserRuleCall_3()); 
    }
    this_RationalCast_3=ruleRationalCast
    { 
        $current = $this_RationalCast_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntCast
entryRuleIntCast returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntCastRule()); }
	 iv_ruleIntCast=ruleIntCast 
	 { $current=$iv_ruleIntCast.current; } 
	 EOF 
;

// Rule IntCast
ruleIntCast returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[int ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntCastAccess().getIntKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntCastAccess().getExprExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntCastRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntCastAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleFloatCast
entryRuleFloatCast returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFloatCastRule()); }
	 iv_ruleFloatCast=ruleFloatCast 
	 { $current=$iv_ruleFloatCast.current; } 
	 EOF 
;

// Rule FloatCast
ruleFloatCast returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='[float ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFloatCastAccess().getFloatKeyword_0_0());
    }

    |	otherlv_1='[double' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFloatCastAccess().getDoubleKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFloatCastAccess().getExprExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFloatCastRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFloatCastAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleDecimalCast
entryRuleDecimalCast returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDecimalCastRule()); }
	 iv_ruleDecimalCast=ruleDecimalCast 
	 { $current=$iv_ruleDecimalCast.current; } 
	 EOF 
;

// Rule DecimalCast
ruleDecimalCast returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[decimal' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDecimalCastAccess().getDecimalKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDecimalCastAccess().getExprExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDecimalCastRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDecimalCastAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleRationalCast
entryRuleRationalCast returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRationalCastRule()); }
	 iv_ruleRationalCast=ruleRationalCast 
	 { $current=$iv_ruleRationalCast.current; } 
	 EOF 
;

// Rule RationalCast
ruleRationalCast returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[rational ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRationalCastAccess().getRationalKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRationalCastAccess().getExprExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRationalCastRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRationalCastAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleWhenQualifier
entryRuleWhenQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenQualifierRule()); }
	 iv_ruleWhenQualifier=ruleWhenQualifier 
	 { $current=$iv_ruleWhenQualifier.current; } 
	 EOF 
;

// Rule WhenQualifier
ruleWhenQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenQualifierAccess().getWhenKeyword_0());
    }
(
(
		lv_not_1_0=	'not' 
    {
        newLeafNode(lv_not_1_0, grammarAccess.getWhenQualifierAccess().getNotNotKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhenQualifierRule());
	        }
       		setWithLastConsumed($current, "not", true, "not");
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhenQualifierRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getWhenQualifierAccess().getClockClockCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleNextQualifier
entryRuleNextQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNextQualifierRule()); }
	 iv_ruleNextQualifier=ruleNextQualifier 
	 { $current=$iv_ruleNextQualifier.current; } 
	 EOF 
;

// Rule NextQualifier
ruleNextQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_strict_0_0=	'strictly' 
    {
        newLeafNode(lv_strict_0_0, grammarAccess.getNextQualifierAccess().getStrictStrictlyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNextQualifierRule());
	        }
       		setWithLastConsumed($current, "strict", true, "strictly");
	    }

)
)?	otherlv_1='next' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNextQualifierAccess().getNextKeyword_1());
    }
	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNextQualifierAccess().getToKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNextQualifierRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getNextQualifierAccess().getClockClockCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRulePattern
entryRulePattern returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatternRule()); }
	 iv_rulePattern=rulePattern 
	 { $current=$iv_rulePattern.current; } 
	 EOF 
;

// Rule Pattern
rulePattern returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPatternAccess().getSkipExpressionParserRuleCall_0_0()); 
	    }
		lv_skip_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternRule());
	        }
       		set(
       			$current, 
       			"skip",
        		lv_skip_0_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPatternAccess().getCommaKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatternAccess().getKeepExpressionParserRuleCall_2_0()); 
	    }
		lv_keep_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternRule());
	        }
       		set(
       			$current, 
       			"keep",
        		lv_keep_2_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_rep_3_0=	'(' 
    {
        newLeafNode(lv_rep_3_0, grammarAccess.getPatternAccess().getRepLeftParenthesisKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatternRule());
	        }
       		setWithLastConsumed($current, "rep", true, "(");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPatternAccess().getRepskipExpressionParserRuleCall_3_1_0()); 
	    }
		lv_repskip_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternRule());
	        }
       		set(
       			$current, 
       			"repskip",
        		lv_repskip_4_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPatternAccess().getCommaKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatternAccess().getRepkeepExpressionParserRuleCall_3_3_0()); 
	    }
		lv_repkeep_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternRule());
	        }
       		set(
       			$current, 
       			"repkeep",
        		lv_repkeep_6_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPatternAccess().getRightParenthesisKeyword_3_4());
    }
	otherlv_8='*' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPatternAccess().getAsteriskKeyword_3_5());
    }
)?)
;





// Entry rule entryRuleTagRelation
entryRuleTagRelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTagRelationRule()); }
	 iv_ruleTagRelation=ruleTagRelation 
	 { $current=$iv_ruleTagRelation.current; } 
	 EOF 
;

// Rule TagRelation
ruleTagRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='tag' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTagRelationAccess().getTagKeyword_0_0());
    }
	otherlv_1='relation' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTagRelationAccess().getRelationKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTagRelationAccess().getExprTagExprParserRuleCall_0_2_0()); 
	    }
		lv_expr_2_0=ruleTagExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagRelationRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"fr.supelec.tesl.lang.TESL.TagExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_3='time' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTagRelationAccess().getTimeKeyword_1_0());
    }
	otherlv_4='relation' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTagRelationAccess().getRelationKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTagRelationAccess().getExprTagExprParserRuleCall_1_2_0()); 
	    }
		lv_expr_5_0=ruleTagExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagRelationRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"fr.supelec.tesl.lang.TESL.TagExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleTagExpr
entryRuleTagExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTagExprRule()); }
	 iv_ruleTagExpr=ruleTagExpr 
	 { $current=$iv_ruleTagExpr.current; } 
	 EOF 
;

// Rule TagExpr
ruleTagExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTagExprAccess().getTagExprAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTagExprRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getTagExprAccess().getClockYClockCrossReference_1_0()); 
	}

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTagExprAccess().getEqualsSignKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTagExprAccess().getValueAExpressionParserRuleCall_3_0_0()); 
	    }
		lv_valueA_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagExprRule());
	        }
       		set(
       			$current, 
       			"valueA",
        		lv_valueA_3_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='*' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTagExprAccess().getAsteriskKeyword_3_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTagExprRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getTagExprAccess().getClockXClockCrossReference_4_0()); 
	}

)
)(	otherlv_6='^' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTagExprAccess().getCircumflexAccentKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTagExprAccess().getValueNBasicExprParserRuleCall_5_1_0()); 
	    }
		lv_valueN_7_0=ruleBasicExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagExprRule());
	        }
       		set(
       			$current, 
       			"valueN",
        		lv_valueN_7_0, 
        		"fr.supelec.tesl.lang.TESL.BasicExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='+' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTagExprAccess().getPlusSignKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTagExprAccess().getValueBExpressionParserRuleCall_6_1_0()); 
	    }
		lv_valueB_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagExprRule());
	        }
       		set(
       			$current, 
       			"valueB",
        		lv_valueB_9_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRulePragma
entryRulePragma returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPragmaRule()); }
	 iv_rulePragma=rulePragma 
	 { $current=$iv_rulePragma.current; } 
	 EOF 
;

// Rule Pragma
rulePragma returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPragmaAccess().getStopPragmaParserRuleCall_0()); 
    }
    this_StopPragma_0=ruleStopPragma
    { 
        $current = $this_StopPragma_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPragmaAccess().getTagrefPragmaParserRuleCall_1()); 
    }
    this_TagrefPragma_1=ruleTagrefPragma
    { 
        $current = $this_TagrefPragma_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPragmaAccess().getTracePragmaParserRuleCall_2()); 
    }
    this_TracePragma_2=ruleTracePragma
    { 
        $current = $this_TracePragma_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPragmaAccess().getMaxstepPragmaParserRuleCall_3()); 
    }
    this_MaxstepPragma_3=ruleMaxstepPragma
    { 
        $current = $this_MaxstepPragma_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPragmaAccess().getOutputPragmaParserRuleCall_4()); 
    }
    this_OutputPragma_4=ruleOutputPragma
    { 
        $current = $this_OutputPragma_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPragmaAccess().getDoubleCalcPragmaParserRuleCall_5()); 
    }
    this_DoubleCalcPragma_5=ruleDoubleCalcPragma
    { 
        $current = $this_DoubleCalcPragma_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPragmaAccess().getDumpResultPragmaParserRuleCall_6()); 
    }
    this_DumpResultPragma_6=ruleDumpResultPragma
    { 
        $current = $this_DumpResultPragma_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStopPragma
entryRuleStopPragma returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStopPragmaRule()); }
	 iv_ruleStopPragma=ruleStopPragma 
	 { $current=$iv_ruleStopPragma.current; } 
	 EOF 
;

// Rule StopPragma
ruleStopPragma returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@stop' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStopPragmaAccess().getStopKeyword_0());
    }
	otherlv_1='when' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStopPragmaAccess().getWhenKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStopPragmaRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getStopPragmaAccess().getClockClockCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleTagrefPragma
entryRuleTagrefPragma returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTagrefPragmaRule()); }
	 iv_ruleTagrefPragma=ruleTagrefPragma 
	 { $current=$iv_ruleTagrefPragma.current; } 
	 EOF 
;

// Rule TagrefPragma
ruleTagrefPragma returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@tagref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTagrefPragmaAccess().getTagrefKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTagrefPragmaRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getTagrefPragmaAccess().getClockClockCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleTracePragma
entryRuleTracePragma returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTracePragmaRule()); }
	 iv_ruleTracePragma=ruleTracePragma 
	 { $current=$iv_ruleTracePragma.current; } 
	 EOF 
;

// Rule TracePragma
ruleTracePragma returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@trace' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTracePragmaAccess().getTraceKeyword_0());
    }
(
(
		lv_kinds_1_0=RULE_ID
		{
			newLeafNode(lv_kinds_1_0, grammarAccess.getTracePragmaAccess().getKindsIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTracePragmaRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"kinds",
        		lv_kinds_1_0, 
        		"fr.supelec.tesl.lang.TESL.ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTracePragmaAccess().getCommaKeyword_2_0());
    }
(
(
		lv_kinds_3_0=RULE_ID
		{
			newLeafNode(lv_kinds_3_0, grammarAccess.getTracePragmaAccess().getKindsIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTracePragmaRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"kinds",
        		lv_kinds_3_0, 
        		"fr.supelec.tesl.lang.TESL.ID");
	    }

)
))*)
;





// Entry rule entryRuleMaxstepPragma
entryRuleMaxstepPragma returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaxstepPragmaRule()); }
	 iv_ruleMaxstepPragma=ruleMaxstepPragma 
	 { $current=$iv_ruleMaxstepPragma.current; } 
	 EOF 
;

// Rule MaxstepPragma
ruleMaxstepPragma returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@maxstep' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMaxstepPragmaAccess().getMaxstepKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMaxstepPragmaAccess().getValueExpressionParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxstepPragmaRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOutputPragma
entryRuleOutputPragma returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputPragmaRule()); }
	 iv_ruleOutputPragma=ruleOutputPragma 
	 { $current=$iv_ruleOutputPragma.current; } 
	 EOF 
;

// Rule OutputPragma
ruleOutputPragma returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOutputPragmaAccess().getOutputPragmaAction_0(),
            $current);
    }
)	otherlv_1='@output' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOutputPragmaAccess().getOutputKeyword_1());
    }
(
(
(
		lv_type_2_1=	'vcd' 
    {
        newLeafNode(lv_type_2_1, grammarAccess.getOutputPragmaAccess().getTypeVcdKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_2_1, null);
	    }

    |		lv_type_2_2=	'tikz' 
    {
        newLeafNode(lv_type_2_2, grammarAccess.getOutputPragmaAccess().getTypeTikzKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_2_2, null);
	    }

    |		lv_type_2_3=	'svg' 
    {
        newLeafNode(lv_type_2_3, grammarAccess.getOutputPragmaAccess().getTypeSvgKeyword_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_2_3, null);
	    }

)

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 0);
	 				}
					({true}?=>((
(
		lv_selection_4_0=	'select' 
    {
        newLeafNode(lv_selection_4_0, grammarAccess.getOutputPragmaAccess().getSelectionSelectKeyword_3_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
       		setWithLastConsumed($current, "selection", true, "select");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputPragmaAccess().getSelectedClocksClockItemParserRuleCall_3_0_1_0()); 
	    }
		lv_selectedClocks_5_0=ruleClockItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputPragmaRule());
	        }
       		add(
       			$current, 
       			"selectedClocks",
        		lv_selectedClocks_5_0, 
        		"fr.supelec.tesl.lang.TESL.ClockItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOutputPragmaAccess().getCommaKeyword_3_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputPragmaAccess().getSelectedClocksClockItemParserRuleCall_3_0_2_1_0()); 
	    }
		lv_selectedClocks_7_0=ruleClockItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputPragmaRule());
	        }
       		add(
       			$current, 
       			"selectedClocks",
        		lv_selectedClocks_7_0, 
        		"fr.supelec.tesl.lang.TESL.ClockItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 1);
	 				}
					({true}?=>((
(
		lv_window_8_0=	'from' 
    {
        newLeafNode(lv_window_8_0, grammarAccess.getOutputPragmaAccess().getWindowFromKeyword_3_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
       		setWithLastConsumed($current, "window", true, "from");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputPragmaAccess().getFromExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_from_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputPragmaRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_9_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='to' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getOutputPragmaAccess().getToKeyword_3_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputPragmaAccess().getToExpressionParserRuleCall_3_1_3_0()); 
	    }
		lv_to_11_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputPragmaRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_11_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 2);
	 				}
					({true}?=>(	otherlv_12='label' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getOutputPragmaAccess().getLabelKeyword_3_2_0());
    }
	otherlv_13='if' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getOutputPragmaAccess().getIfKeyword_3_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getOutputPragmaAccess().getLabelifClockCrossReference_3_2_2_0()); 
	}

)
)(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getOutputPragmaAccess().getCommaKeyword_3_2_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getOutputPragmaAccess().getLabelifClockCrossReference_3_2_3_1_0()); 
	}

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 3);
	 				}
					({true}?=>((
(
		lv_xscaled_17_0=	'xscale' 
    {
        newLeafNode(lv_xscaled_17_0, grammarAccess.getOutputPragmaAccess().getXscaledXscaleKeyword_3_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
       		setWithLastConsumed($current, "xscaled", true, "xscale");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputPragmaAccess().getXscaleExpressionParserRuleCall_3_3_1_0()); 
	    }
		lv_xscale_18_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputPragmaRule());
	        }
       		set(
       			$current, 
       			"xscale",
        		lv_xscale_18_0, 
        		"fr.supelec.tesl.lang.TESL.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 4);
	 				}
					({true}?=>(	otherlv_19='border' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getOutputPragmaAccess().getBorderKeyword_3_4_0());
    }
	otherlv_20='=' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getOutputPragmaAccess().getEqualsSignKeyword_3_4_1());
    }
(
(
		lv_border_21_0=RULE_STRING
		{
			newLeafNode(lv_border_21_0, grammarAccess.getOutputPragmaAccess().getBorderSTRINGTerminalRuleCall_3_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"border",
        		lv_border_21_0, 
        		"fr.supelec.tesl.lang.TESL.STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 5);
	 				}
					({true}?=>(	otherlv_22='css' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getOutputPragmaAccess().getCssKeyword_3_5_0());
    }
	otherlv_23='=' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getOutputPragmaAccess().getEqualsSignKeyword_3_5_1());
    }
(
(
		lv_css_24_0=RULE_STRING
		{
			newLeafNode(lv_css_24_0, grammarAccess.getOutputPragmaAccess().getCssSTRINGTerminalRuleCall_3_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"css",
        		lv_css_24_0, 
        		"fr.supelec.tesl.lang.TESL.STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 6);
	 				}
					({true}?=>(
(
		lv_nodefcss_25_0=	'no-default-css' 
    {
        newLeafNode(lv_nodefcss_25_0, grammarAccess.getOutputPragmaAccess().getNodefcssNoDefaultCssKeyword_3_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
       		setWithLastConsumed($current, "nodefcss", true, "no-default-css");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 7);
	 				}
					({true}?=>(	otherlv_26='javascript' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getOutputPragmaAccess().getJavascriptKeyword_3_7_0());
    }
	otherlv_27='=' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getOutputPragmaAccess().getEqualsSignKeyword_3_7_1());
    }
(
(
		lv_jvs_28_0=RULE_STRING
		{
			newLeafNode(lv_jvs_28_0, grammarAccess.getOutputPragmaAccess().getJvsSTRINGTerminalRuleCall_3_7_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"jvs",
        		lv_jvs_28_0, 
        		"fr.supelec.tesl.lang.TESL.STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 8);
	 				}
					({true}?=>((
(
		lv_standalone_29_0=	'standalone' 
    {
        newLeafNode(lv_standalone_29_0, grammarAccess.getOutputPragmaAccess().getStandaloneStandaloneKeyword_3_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
       		setWithLastConsumed($current, "standalone", true, "standalone");
	    }

)
)(
(
		lv_overwrite_30_0=	'overwrite' 
    {
        newLeafNode(lv_overwrite_30_0, grammarAccess.getOutputPragmaAccess().getOverwriteOverwriteKeyword_3_8_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPragmaRule());
	        }
       		setWithLastConsumed($current, "overwrite", true, "overwrite");
	    }

)
)?))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	}

))
;





// Entry rule entryRuleClockItem
entryRuleClockItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClockItemRule()); }
	 iv_ruleClockItem=ruleClockItem 
	 { $current=$iv_ruleClockItem.current; } 
	 EOF 
;

// Rule ClockItem
ruleClockItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClockItemRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getClockItemAccess().getClockClockCrossReference_0_0()); 
	}

)
)(	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClockItemAccess().getHyphenMinusGreaterThanSignKeyword_1_0());
    }
(
(
		lv_newName_2_0=RULE_ID
		{
			newLeafNode(lv_newName_2_0, grammarAccess.getClockItemAccess().getNewNameIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClockItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"newName",
        		lv_newName_2_0, 
        		"fr.supelec.tesl.lang.TESL.ID");
	    }

)
))?)
;





// Entry rule entryRuleDoubleCalcPragma
entryRuleDoubleCalcPragma returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleCalcPragmaRule()); }
	 iv_ruleDoubleCalcPragma=ruleDoubleCalcPragma 
	 { $current=$iv_ruleDoubleCalcPragma.current; } 
	 EOF 
;

// Rule DoubleCalcPragma
ruleDoubleCalcPragma returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@doublecalc' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDoubleCalcPragmaAccess().getDoublecalcKeyword_0());
    }
	otherlv_1='digits' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDoubleCalcPragmaAccess().getDigitsKeyword_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDoubleCalcPragmaAccess().getEqualsSignKeyword_2());
    }
(
(
		lv_num_digits_3_0=RULE_BIG_INT
		{
			newLeafNode(lv_num_digits_3_0, grammarAccess.getDoubleCalcPragmaAccess().getNum_digitsBIG_INTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoubleCalcPragmaRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"num_digits",
        		lv_num_digits_3_0, 
        		"fr.supelec.tesl.lang.TESL.BIG_INT");
	    }

)
)((
(
		lv_round_4_0=	'(' 
    {
        newLeafNode(lv_round_4_0, grammarAccess.getDoubleCalcPragmaAccess().getRoundLeftParenthesisKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoubleCalcPragmaRule());
	        }
       		setWithLastConsumed($current, "round", true, "(");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDoubleCalcPragmaAccess().getRounding_modeROUNDING_MODEEnumRuleCall_4_1_0()); 
	    }
		lv_rounding_mode_5_0=ruleROUNDING_MODE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoubleCalcPragmaRule());
	        }
       		set(
       			$current, 
       			"rounding_mode",
        		lv_rounding_mode_5_0, 
        		"fr.supelec.tesl.lang.TESL.ROUNDING_MODE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDoubleCalcPragmaAccess().getRightParenthesisKeyword_4_2());
    }
)?)
;





// Entry rule entryRuleDumpResultPragma
entryRuleDumpResultPragma returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDumpResultPragmaRule()); }
	 iv_ruleDumpResultPragma=ruleDumpResultPragma 
	 { $current=$iv_ruleDumpResultPragma.current; } 
	 EOF 
;

// Rule DumpResultPragma
ruleDumpResultPragma returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDumpResultPragmaAccess().getDumpResultPragmaAction_0(),
            $current);
    }
)	otherlv_1='@dumpres' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDumpResultPragmaAccess().getDumpresKeyword_1());
    }
)
;





// Rule Type
ruleType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='U-clock' 
	{
        $current = grammarAccess.getTypeAccess().getTUNITEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getTypeAccess().getTUNITEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='unit-clock' 
	{
        $current = grammarAccess.getTypeAccess().getTUNITEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getTypeAccess().getTUNITEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Z-clock' 
	{
        $current = grammarAccess.getTypeAccess().getTINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getTypeAccess().getTINTEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='int-clock' 
	{
        $current = grammarAccess.getTypeAccess().getTINTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getTypeAccess().getTINTEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='D-clock' 
	{
        $current = grammarAccess.getTypeAccess().getTDECEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getTypeAccess().getTDECEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='decimal-clock' 
	{
        $current = grammarAccess.getTypeAccess().getTDECEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getTypeAccess().getTDECEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Q-clock' 
	{
        $current = grammarAccess.getTypeAccess().getTRATEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getTypeAccess().getTRATEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='rational-clock' 
	{
        $current = grammarAccess.getTypeAccess().getTRATEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getTypeAccess().getTRATEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='F-clock' 
	{
        $current = grammarAccess.getTypeAccess().getTFLOATEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getTypeAccess().getTFLOATEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='float-clock' 
	{
        $current = grammarAccess.getTypeAccess().getTFLOATEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getTypeAccess().getTFLOATEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='double-clock' 
	{
        $current = grammarAccess.getTypeAccess().getTFLOATEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getTypeAccess().getTFLOATEnumLiteralDeclaration_10()); 
    }
));



// Rule ValueType
ruleValueType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='int' 
	{
        $current = grammarAccess.getValueTypeAccess().getTINTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getTINTEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='decimal' 
	{
        $current = grammarAccess.getValueTypeAccess().getTDECEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getTDECEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='rational' 
	{
        $current = grammarAccess.getValueTypeAccess().getTRATEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getTRATEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='double' 
	{
        $current = grammarAccess.getValueTypeAccess().getTFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getValueTypeAccess().getTFLOATEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='float' 
	{
        $current = grammarAccess.getValueTypeAccess().getTFLOATEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getValueTypeAccess().getTFLOATEnumLiteralDeclaration_4()); 
    }
));



// Rule OpTerm
ruleOpTerm returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='+' 
	{
        $current = grammarAccess.getOpTermAccess().getPLUSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getOpTermAccess().getPLUSEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='-' 
	{
        $current = grammarAccess.getOpTermAccess().getMINUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getOpTermAccess().getMINUSEnumLiteralDeclaration_1()); 
    }
));



// Rule OpFact
ruleOpFact returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='*' 
	{
        $current = grammarAccess.getOpFactAccess().getTIMESEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getOpFactAccess().getTIMESEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='/' 
	{
        $current = grammarAccess.getOpFactAccess().getDIVEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getOpFactAccess().getDIVEnumLiteralDeclaration_1()); 
    }
));



// Rule ROUNDING_MODE
ruleROUNDING_MODE returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='round_up' 
	{
        $current = grammarAccess.getROUNDING_MODEAccess().getROUND_UPEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getROUNDING_MODEAccess().getROUND_UPEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='round_down' 
	{
        $current = grammarAccess.getROUNDING_MODEAccess().getROUND_DOWNEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getROUNDING_MODEAccess().getROUND_DOWNEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='round_ceil' 
	{
        $current = grammarAccess.getROUNDING_MODEAccess().getROUND_CEILINGEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getROUNDING_MODEAccess().getROUND_CEILINGEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='round_floor' 
	{
        $current = grammarAccess.getROUNDING_MODEAccess().getROUND_FLOOREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getROUNDING_MODEAccess().getROUND_FLOOREnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='round_half_up' 
	{
        $current = grammarAccess.getROUNDING_MODEAccess().getROUND_HALF_UPEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getROUNDING_MODEAccess().getROUND_HALF_UPEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='round_half_down' 
	{
        $current = grammarAccess.getROUNDING_MODEAccess().getROUND_HALF_DOWNEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getROUNDING_MODEAccess().getROUND_HALF_DOWNEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='round_half_even' 
	{
        $current = grammarAccess.getROUNDING_MODEAccess().getROUND_HALF_EVENEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getROUNDING_MODEAccess().getROUND_HALF_EVENEnumLiteralDeclaration_6()); 
    }
));



fragment RULE_DIGIT : '0'..'9';

fragment RULE_SIGN : ('+'|'-');

fragment RULE_EXPONENT : ('e'|'E') RULE_SIGN? RULE_DIGIT+;

RULE_BIG_INT : RULE_DIGIT+;

RULE_FLOAT : (RULE_DIGIT+ '.' RULE_DIGIT* RULE_EXPONENT?|'.' RULE_DIGIT+ RULE_EXPONENT?|RULE_DIGIT+ RULE_EXPONENT) 'F';

RULE_BIG_DECIMAL : (RULE_DIGIT+ '.' RULE_DIGIT* RULE_EXPONENT?|'.' RULE_DIGIT+ RULE_EXPONENT?|RULE_DIGIT+ RULE_EXPONENT);

RULE_RATIONAL : '<' RULE_DIGIT+ '/' RULE_DIGIT+ '>';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_STRING : '"' ( options {greedy=false;} : . )*'"';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


