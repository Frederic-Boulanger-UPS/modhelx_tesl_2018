package fr.supelec.tesl.lang.ui.run

import java.io.PrintWriter
import java.util.Calendar
import fr.supelec.tesl.core.TESLEngine
import java.util.LinkedList
import java.util.Set

// Output for VCD format
class VCDWriter implements OutputFormatHandler {
    static val fileExtension = ".vcd"

    override void write(TESLSpec spec, OutputFormat fmt) {
        val outf = new PrintWriter(spec.baseName + fileExtension)
        spec.console(spec.out, "## Writing " + fmt.name + " output")

        outf.println("$date")
        outf.println(Calendar.getInstance().getTime().toString())
        outf.println("$end")
        outf.println("$version")
        outf.println("Generated by TESL lang " + LaunchTESLSimulation::getVersion() + " using TESL engine " + TESLEngine::getVersion())
        outf.println("$end")
        outf.println("$timescale 1 us $end")
        outf.println("$comment")
        outf.println("Generated from file \"" + spec.osfile + "\"")
        outf.println("$end")
        outf.println("$scope module top $end")
        val clocks = if (fmt.selection.size == 0) {
            spec.orderedClockNames
        } else {
            fmt.selection
        }
        
        for (String name : clocks) {
            val newName = fmt.newName(name)
            outf.println("$var event 1 " + newName + " " + newName + " $end")
        }
        
        outf.println("$upscope $end")
        outf.println("$enddefinitions $end")
        outf.println("$dumpvars")
        outf.println("$end")
        
        val theTicks = new LinkedList<Set<String>>()
        val theTags = new LinkedList<Double>()
        
        fmt.clipToWindow(spec, theTicks, theTags)
        
        for (i : 0 ..< theTicks.size()) {
            outf.println("#" + ((theTags.get(i) * 1e6) as long));
            for (String name : theTicks.get(i)) {
                if (clocks.contains(name)) {
                    outf.println("1" + fmt.newName(name));
                }
            }
        }
        
        outf.close()
        spec.console(spec.out, "## Done");
    }
}
