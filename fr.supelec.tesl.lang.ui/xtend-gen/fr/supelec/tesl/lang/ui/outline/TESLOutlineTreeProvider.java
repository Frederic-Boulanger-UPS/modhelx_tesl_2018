/**
 * generated by Xtext
 */
package fr.supelec.tesl.lang.ui.outline;

import fr.supelec.tesl.lang.tesl.Clock;
import fr.supelec.tesl.lang.tesl.ImplicationQualifier;
import fr.supelec.tesl.lang.tesl.ImplicationRelation;
import fr.supelec.tesl.lang.tesl.Specification;
import fr.supelec.tesl.lang.tesl.TagRelation;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode;

/**
 * Customization of the default outline structure.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#outline
 */
public class TESLOutlineTreeProvider extends DefaultOutlineTreeProvider {
  protected boolean _isLeaf(final Clock c) {
    return true;
  }

  protected Object _createChildren(final DocumentRootNode parentNode, final Specification spec) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method forEach(Object) is undefined for the type EList<Clock>"
      + "\nThe method forEach(Object) is undefined for the type EList<Relation>"
      + "\nThe method or field size is undefined for the type EList<Pragma>"
      + "\nThe method forEach(Object) is undefined for the type EList<Pragma>"
      + "\nThe constructor VirtualOutlineNode(IOutlineNode, Image, Object, boolean) refers to the missing type Object"
      + "\nThe constructor VirtualOutlineNode(IOutlineNode, Image, Object, boolean) refers to the missing type Object"
      + "\nThe constructor VirtualOutlineNode(IOutlineNode, Image, Object, boolean) refers to the missing type Object"
      + "\n> cannot be resolved");
  }

  protected Object _isLeaf(final ImplicationRelation r) {
    throw new Error("Unresolved compilation problems:"
      + "\n== cannot be resolved.");
  }

  protected boolean _isLeaf(final TagRelation r) {
    return true;
  }

  protected boolean _isLeaf(final ImplicationQualifier q) {
    return true;
  }
}
