let int ten = 10
let decimal dec1 = 1.2356 + 1
let decimal dec2 = 1 + .2356
let decimal dec3 = 123.56e-2
let decimal dec4 = 123.E2

let decimal one_over_three = 1.0 / 3 // This line should have an error marker because 1.9/3 is not decimal
let rational one_third = [rational 1] / 3
let rational two = $one_third + <2/3> + 1.0
let float two_dec = 1.F/3 + 2.F/3 + 1
//let float two_dec = 1.F/3 + 2.F/3 + 1
let float one3 = 1.F/3

U-clock boot sporadic
U-clock clock sporadic
D-clock sampling

boot when not sampling implies clock

//clock implies sampling

@trace _lets_
@trace info
//@doublecalc digits = 2 (round_down)