/**
 * generated by Xtext
 */
package fr.supelec.tesl.lang.ui.labeling;

import com.google.inject.Inject;
import fr.supelec.tesl.lang.tesl.Clock;
import fr.supelec.tesl.lang.tesl.DelayedQualifier;
import fr.supelec.tesl.lang.tesl.FilteredQualifier;
import fr.supelec.tesl.lang.tesl.ImplicationRelation;
import fr.supelec.tesl.lang.tesl.Pattern;
import fr.supelec.tesl.lang.tesl.SustainedQualifier;
import fr.supelec.tesl.lang.tesl.TagExpr;
import fr.supelec.tesl.lang.tesl.TagRelation;
import fr.supelec.tesl.lang.tesl.TimeDelayedQualifier;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
public class TESLLabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  public TESLLabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }

  public Object text(final Clock c) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field name is undefined for the type Clock"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved");
  }

  public Object text(final TagRelation r) {
    throw new Error("Unresolved compilation problems:"
      + "\n!= cannot be resolved."
      + "\nThe method text(TagExpr) from the type TESLLabelProvider refers to the missing type Object"
      + "\n+ cannot be resolved");
  }

  public Object text(final TagExpr e) {
    throw new Error("Unresolved compilation problems:"
      + "\n!= cannot be resolved."
      + "\n+ cannot be resolved."
      + "\n!= cannot be resolved."
      + "\n!= cannot be resolved."
      + "\n+ cannot be resolved."
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved");
  }

  public Object text(final ImplicationRelation r) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field name is undefined for the type Clock"
      + "\nThe method or field name is undefined for the type Clock"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved");
  }

  public Object text(final DelayedQualifier q) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field name is undefined for the type Clock"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved");
  }

  public Object text(final SustainedQualifier q) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field name is undefined for the type Clock"
      + "\nThe method or field name is undefined for the type Clock"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved");
  }

  public java.lang.String text(final TimeDelayedQualifier q) {
    return "time delayed";
  }

  public Object text(final FilteredQualifier q) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method text(Pattern) from the type TESLLabelProvider refers to the missing type Object"
      + "\n+ cannot be resolved");
  }

  public Object text(final Pattern p) {
    throw new Error("Unresolved compilation problems:"
      + "\n+ cannot be resolved."
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved");
  }
}
