/*
 * generated by Xtext
 */
grammar InternalTESL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.supelec.tesl.lang.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.supelec.tesl.lang.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.supelec.tesl.lang.services.TESLGrammarAccess;

}

@parser::members {
 
 	private TESLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TESLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSpecification
entryRuleSpecification 
:
{ before(grammarAccess.getSpecificationRule()); }
	 ruleSpecification
{ after(grammarAccess.getSpecificationRule()); } 
	 EOF 
;

// Rule Specification
ruleSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecificationAccess().getAlternatives()); }
(rule__Specification__Alternatives)*
{ after(grammarAccess.getSpecificationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClock
entryRuleClock 
:
{ before(grammarAccess.getClockRule()); }
	 ruleClock
{ after(grammarAccess.getClockRule()); } 
	 EOF 
;

// Rule Clock
ruleClock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClockAccess().getGroup()); }
(rule__Clock__Group__0)
{ after(grammarAccess.getClockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClockQualifier
entryRuleClockQualifier 
:
{ before(grammarAccess.getClockQualifierRule()); }
	 ruleClockQualifier
{ after(grammarAccess.getClockQualifierRule()); } 
	 EOF 
;

// Rule ClockQualifier
ruleClockQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClockQualifierAccess().getAlternatives()); }
(rule__ClockQualifier__Alternatives)
{ after(grammarAccess.getClockQualifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePeriodicQualifier
entryRulePeriodicQualifier 
:
{ before(grammarAccess.getPeriodicQualifierRule()); }
	 rulePeriodicQualifier
{ after(grammarAccess.getPeriodicQualifierRule()); } 
	 EOF 
;

// Rule PeriodicQualifier
rulePeriodicQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPeriodicQualifierAccess().getGroup()); }
(rule__PeriodicQualifier__Group__0)
{ after(grammarAccess.getPeriodicQualifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSporadicQualifier
entryRuleSporadicQualifier 
:
{ before(grammarAccess.getSporadicQualifierRule()); }
	 ruleSporadicQualifier
{ after(grammarAccess.getSporadicQualifierRule()); } 
	 EOF 
;

// Rule SporadicQualifier
ruleSporadicQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSporadicQualifierAccess().getGroup()); }
(rule__SporadicQualifier__Group__0)
{ after(grammarAccess.getSporadicQualifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelation
entryRuleRelation 
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationAccess().getAlternatives()); }
(rule__Relation__Alternatives)
{ after(grammarAccess.getRelationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImplicationRelation
entryRuleImplicationRelation 
:
{ before(grammarAccess.getImplicationRelationRule()); }
	 ruleImplicationRelation
{ after(grammarAccess.getImplicationRelationRule()); } 
	 EOF 
;

// Rule ImplicationRelation
ruleImplicationRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImplicationRelationAccess().getGroup()); }
(rule__ImplicationRelation__Group__0)
{ after(grammarAccess.getImplicationRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAwaitImplication
entryRuleAwaitImplication 
:
{ before(grammarAccess.getAwaitImplicationRule()); }
	 ruleAwaitImplication
{ after(grammarAccess.getAwaitImplicationRule()); } 
	 EOF 
;

// Rule AwaitImplication
ruleAwaitImplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAwaitImplicationAccess().getGroup()); }
(rule__AwaitImplication__Group__0)
{ after(grammarAccess.getAwaitImplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImplicationQualifier
entryRuleImplicationQualifier 
:
{ before(grammarAccess.getImplicationQualifierRule()); }
	 ruleImplicationQualifier
{ after(grammarAccess.getImplicationQualifierRule()); } 
	 EOF 
;

// Rule ImplicationQualifier
ruleImplicationQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImplicationQualifierAccess().getAlternatives()); }
(rule__ImplicationQualifier__Alternatives)
{ after(grammarAccess.getImplicationQualifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilteredQualifier
entryRuleFilteredQualifier 
:
{ before(grammarAccess.getFilteredQualifierRule()); }
	 ruleFilteredQualifier
{ after(grammarAccess.getFilteredQualifierRule()); } 
	 EOF 
;

// Rule FilteredQualifier
ruleFilteredQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilteredQualifierAccess().getGroup()); }
(rule__FilteredQualifier__Group__0)
{ after(grammarAccess.getFilteredQualifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEveryQualifier
entryRuleEveryQualifier 
:
{ before(grammarAccess.getEveryQualifierRule()); }
	 ruleEveryQualifier
{ after(grammarAccess.getEveryQualifierRule()); } 
	 EOF 
;

// Rule EveryQualifier
ruleEveryQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEveryQualifierAccess().getGroup()); }
(rule__EveryQualifier__Group__0)
{ after(grammarAccess.getEveryQualifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelayedQualifier
entryRuleDelayedQualifier 
:
{ before(grammarAccess.getDelayedQualifierRule()); }
	 ruleDelayedQualifier
{ after(grammarAccess.getDelayedQualifierRule()); } 
	 EOF 
;

// Rule DelayedQualifier
ruleDelayedQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelayedQualifierAccess().getGroup()); }
(rule__DelayedQualifier__Group__0)
{ after(grammarAccess.getDelayedQualifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSustainedQualifier
entryRuleSustainedQualifier 
:
{ before(grammarAccess.getSustainedQualifierRule()); }
	 ruleSustainedQualifier
{ after(grammarAccess.getSustainedQualifierRule()); } 
	 EOF 
;

// Rule SustainedQualifier
ruleSustainedQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSustainedQualifierAccess().getGroup()); }
(rule__SustainedQualifier__Group__0)
{ after(grammarAccess.getSustainedQualifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeDelayedQualifier
entryRuleTimeDelayedQualifier 
:
{ before(grammarAccess.getTimeDelayedQualifierRule()); }
	 ruleTimeDelayedQualifier
{ after(grammarAccess.getTimeDelayedQualifierRule()); } 
	 EOF 
;

// Rule TimeDelayedQualifier
ruleTimeDelayedQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getGroup()); }
(rule__TimeDelayedQualifier__Group__0)
{ after(grammarAccess.getTimeDelayedQualifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLet
entryRuleLet 
:
{ before(grammarAccess.getLetRule()); }
	 ruleLet
{ after(grammarAccess.getLetRule()); } 
	 EOF 
;

// Rule Let
ruleLet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetAccess().getGroup()); }
(rule__Let__Group__0)
{ after(grammarAccess.getLetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerValue
entryRuleIntegerValue 
:
{ before(grammarAccess.getIntegerValueRule()); }
	 ruleIntegerValue
{ after(grammarAccess.getIntegerValueRule()); } 
	 EOF 
;

// Rule IntegerValue
ruleIntegerValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerValueAccess().getGroup()); }
(rule__IntegerValue__Group__0)
{ after(grammarAccess.getIntegerValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecimalValue
entryRuleDecimalValue 
:
{ before(grammarAccess.getDecimalValueRule()); }
	 ruleDecimalValue
{ after(grammarAccess.getDecimalValueRule()); } 
	 EOF 
;

// Rule DecimalValue
ruleDecimalValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecimalValueAccess().getGroup()); }
(rule__DecimalValue__Group__0)
{ after(grammarAccess.getDecimalValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatValue
entryRuleFloatValue 
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatValueAccess().getGroup()); }
(rule__FloatValue__Group__0)
{ after(grammarAccess.getFloatValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRationalValue
entryRuleRationalValue 
:
{ before(grammarAccess.getRationalValueRule()); }
	 ruleRationalValue
{ after(grammarAccess.getRationalValueRule()); } 
	 EOF 
;

// Rule RationalValue
ruleRationalValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRationalValueAccess().getGroup()); }
(rule__RationalValue__Group__0)
{ after(grammarAccess.getRationalValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLetValue
entryRuleLetValue 
:
{ before(grammarAccess.getLetValueRule()); }
	 ruleLetValue
{ after(grammarAccess.getLetValueRule()); } 
	 EOF 
;

// Rule LetValue
ruleLetValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetValueAccess().getGroup()); }
(rule__LetValue__Group__0)
{ after(grammarAccess.getLetValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getTermParserRuleCall()); }
	ruleTerm
{ after(grammarAccess.getExpressionAccess().getTermParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerm
entryRuleTerm 
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermAccess().getGroup()); }
(rule__Term__Group__0)
{ after(grammarAccess.getTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFactor
entryRuleFactor 
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFactorAccess().getGroup()); }
(rule__Factor__Group__0)
{ after(grammarAccess.getFactorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicExpr
entryRuleBasicExpr 
:
{ before(grammarAccess.getBasicExprRule()); }
	 ruleBasicExpr
{ after(grammarAccess.getBasicExprRule()); } 
	 EOF 
;

// Rule BasicExpr
ruleBasicExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicExprAccess().getAlternatives()); }
(rule__BasicExpr__Alternatives)
{ after(grammarAccess.getBasicExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCast
entryRuleCast 
:
{ before(grammarAccess.getCastRule()); }
	 ruleCast
{ after(grammarAccess.getCastRule()); } 
	 EOF 
;

// Rule Cast
ruleCast
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCastAccess().getAlternatives()); }
(rule__Cast__Alternatives)
{ after(grammarAccess.getCastAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntCast
entryRuleIntCast 
:
{ before(grammarAccess.getIntCastRule()); }
	 ruleIntCast
{ after(grammarAccess.getIntCastRule()); } 
	 EOF 
;

// Rule IntCast
ruleIntCast
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntCastAccess().getGroup()); }
(rule__IntCast__Group__0)
{ after(grammarAccess.getIntCastAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatCast
entryRuleFloatCast 
:
{ before(grammarAccess.getFloatCastRule()); }
	 ruleFloatCast
{ after(grammarAccess.getFloatCastRule()); } 
	 EOF 
;

// Rule FloatCast
ruleFloatCast
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatCastAccess().getGroup()); }
(rule__FloatCast__Group__0)
{ after(grammarAccess.getFloatCastAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecimalCast
entryRuleDecimalCast 
:
{ before(grammarAccess.getDecimalCastRule()); }
	 ruleDecimalCast
{ after(grammarAccess.getDecimalCastRule()); } 
	 EOF 
;

// Rule DecimalCast
ruleDecimalCast
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecimalCastAccess().getGroup()); }
(rule__DecimalCast__Group__0)
{ after(grammarAccess.getDecimalCastAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRationalCast
entryRuleRationalCast 
:
{ before(grammarAccess.getRationalCastRule()); }
	 ruleRationalCast
{ after(grammarAccess.getRationalCastRule()); } 
	 EOF 
;

// Rule RationalCast
ruleRationalCast
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRationalCastAccess().getGroup()); }
(rule__RationalCast__Group__0)
{ after(grammarAccess.getRationalCastAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhenQualifier
entryRuleWhenQualifier 
:
{ before(grammarAccess.getWhenQualifierRule()); }
	 ruleWhenQualifier
{ after(grammarAccess.getWhenQualifierRule()); } 
	 EOF 
;

// Rule WhenQualifier
ruleWhenQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhenQualifierAccess().getGroup()); }
(rule__WhenQualifier__Group__0)
{ after(grammarAccess.getWhenQualifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNextQualifier
entryRuleNextQualifier 
:
{ before(grammarAccess.getNextQualifierRule()); }
	 ruleNextQualifier
{ after(grammarAccess.getNextQualifierRule()); } 
	 EOF 
;

// Rule NextQualifier
ruleNextQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNextQualifierAccess().getGroup()); }
(rule__NextQualifier__Group__0)
{ after(grammarAccess.getNextQualifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePattern
entryRulePattern 
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPatternAccess().getGroup()); }
(rule__Pattern__Group__0)
{ after(grammarAccess.getPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagRelation
entryRuleTagRelation 
:
{ before(grammarAccess.getTagRelationRule()); }
	 ruleTagRelation
{ after(grammarAccess.getTagRelationRule()); } 
	 EOF 
;

// Rule TagRelation
ruleTagRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagRelationAccess().getAlternatives()); }
(rule__TagRelation__Alternatives)
{ after(grammarAccess.getTagRelationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagExpr
entryRuleTagExpr 
:
{ before(grammarAccess.getTagExprRule()); }
	 ruleTagExpr
{ after(grammarAccess.getTagExprRule()); } 
	 EOF 
;

// Rule TagExpr
ruleTagExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagExprAccess().getGroup()); }
(rule__TagExpr__Group__0)
{ after(grammarAccess.getTagExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePragma
entryRulePragma 
:
{ before(grammarAccess.getPragmaRule()); }
	 rulePragma
{ after(grammarAccess.getPragmaRule()); } 
	 EOF 
;

// Rule Pragma
rulePragma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPragmaAccess().getAlternatives()); }
(rule__Pragma__Alternatives)
{ after(grammarAccess.getPragmaAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStopPragma
entryRuleStopPragma 
:
{ before(grammarAccess.getStopPragmaRule()); }
	 ruleStopPragma
{ after(grammarAccess.getStopPragmaRule()); } 
	 EOF 
;

// Rule StopPragma
ruleStopPragma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStopPragmaAccess().getGroup()); }
(rule__StopPragma__Group__0)
{ after(grammarAccess.getStopPragmaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagrefPragma
entryRuleTagrefPragma 
:
{ before(grammarAccess.getTagrefPragmaRule()); }
	 ruleTagrefPragma
{ after(grammarAccess.getTagrefPragmaRule()); } 
	 EOF 
;

// Rule TagrefPragma
ruleTagrefPragma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagrefPragmaAccess().getGroup()); }
(rule__TagrefPragma__Group__0)
{ after(grammarAccess.getTagrefPragmaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTracePragma
entryRuleTracePragma 
:
{ before(grammarAccess.getTracePragmaRule()); }
	 ruleTracePragma
{ after(grammarAccess.getTracePragmaRule()); } 
	 EOF 
;

// Rule TracePragma
ruleTracePragma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTracePragmaAccess().getGroup()); }
(rule__TracePragma__Group__0)
{ after(grammarAccess.getTracePragmaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMaxstepPragma
entryRuleMaxstepPragma 
:
{ before(grammarAccess.getMaxstepPragmaRule()); }
	 ruleMaxstepPragma
{ after(grammarAccess.getMaxstepPragmaRule()); } 
	 EOF 
;

// Rule MaxstepPragma
ruleMaxstepPragma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMaxstepPragmaAccess().getGroup()); }
(rule__MaxstepPragma__Group__0)
{ after(grammarAccess.getMaxstepPragmaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutputPragma
entryRuleOutputPragma 
:
{ before(grammarAccess.getOutputPragmaRule()); }
	 ruleOutputPragma
{ after(grammarAccess.getOutputPragmaRule()); } 
	 EOF 
;

// Rule OutputPragma
ruleOutputPragma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputPragmaAccess().getGroup()); }
(rule__OutputPragma__Group__0)
{ after(grammarAccess.getOutputPragmaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClockItem
entryRuleClockItem 
:
{ before(grammarAccess.getClockItemRule()); }
	 ruleClockItem
{ after(grammarAccess.getClockItemRule()); } 
	 EOF 
;

// Rule ClockItem
ruleClockItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClockItemAccess().getGroup()); }
(rule__ClockItem__Group__0)
{ after(grammarAccess.getClockItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoubleCalcPragma
entryRuleDoubleCalcPragma 
:
{ before(grammarAccess.getDoubleCalcPragmaRule()); }
	 ruleDoubleCalcPragma
{ after(grammarAccess.getDoubleCalcPragmaRule()); } 
	 EOF 
;

// Rule DoubleCalcPragma
ruleDoubleCalcPragma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getGroup()); }
(rule__DoubleCalcPragma__Group__0)
{ after(grammarAccess.getDoubleCalcPragmaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDumpResultPragma
entryRuleDumpResultPragma 
:
{ before(grammarAccess.getDumpResultPragmaRule()); }
	 ruleDumpResultPragma
{ after(grammarAccess.getDumpResultPragmaRule()); } 
	 EOF 
;

// Rule DumpResultPragma
ruleDumpResultPragma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDumpResultPragmaAccess().getGroup()); }
(rule__DumpResultPragma__Group__0)
{ after(grammarAccess.getDumpResultPragmaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ValueType
ruleValueType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getAlternatives()); }
(rule__ValueType__Alternatives)
{ after(grammarAccess.getValueTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OpTerm
ruleOpTerm
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpTermAccess().getAlternatives()); }
(rule__OpTerm__Alternatives)
{ after(grammarAccess.getOpTermAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OpFact
ruleOpFact
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpFactAccess().getAlternatives()); }
(rule__OpFact__Alternatives)
{ after(grammarAccess.getOpFactAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ROUNDING_MODE
ruleROUNDING_MODE
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getROUNDING_MODEAccess().getAlternatives()); }
(rule__ROUNDING_MODE__Alternatives)
{ after(grammarAccess.getROUNDING_MODEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Specification__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getDeclAssignment_0()); }
(rule__Specification__DeclAssignment_0)
{ after(grammarAccess.getSpecificationAccess().getDeclAssignment_0()); }
)

    |(
{ before(grammarAccess.getSpecificationAccess().getRelAssignment_1()); }
(rule__Specification__RelAssignment_1)
{ after(grammarAccess.getSpecificationAccess().getRelAssignment_1()); }
)

    |(
{ before(grammarAccess.getSpecificationAccess().getLetAssignment_2()); }
(rule__Specification__LetAssignment_2)
{ after(grammarAccess.getSpecificationAccess().getLetAssignment_2()); }
)

    |(
{ before(grammarAccess.getSpecificationAccess().getPragmasAssignment_3()); }
(rule__Specification__PragmasAssignment_3)
{ after(grammarAccess.getSpecificationAccess().getPragmasAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClockQualifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockQualifierAccess().getPeriodicQualifierParserRuleCall_0()); }
	rulePeriodicQualifier
{ after(grammarAccess.getClockQualifierAccess().getPeriodicQualifierParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClockQualifierAccess().getSporadicQualifierParserRuleCall_1()); }
	ruleSporadicQualifier
{ after(grammarAccess.getClockQualifierAccess().getSporadicQualifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getImplicationRelationParserRuleCall_0()); }
	ruleImplicationRelation
{ after(grammarAccess.getRelationAccess().getImplicationRelationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getTagRelationParserRuleCall_1()); }
	ruleTagRelation
{ after(grammarAccess.getRelationAccess().getTagRelationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getAwaitImplicationParserRuleCall_2()); }
	ruleAwaitImplication
{ after(grammarAccess.getRelationAccess().getAwaitImplicationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getWeakAssignment_2_1_0()); }
(rule__AwaitImplication__WeakAssignment_2_1_0)
{ after(grammarAccess.getAwaitImplicationAccess().getWeakAssignment_2_1_0()); }
)

    |(
{ before(grammarAccess.getAwaitImplicationAccess().getStrongAssignment_2_1_1()); }
(rule__AwaitImplication__StrongAssignment_2_1_1)
{ after(grammarAccess.getAwaitImplicationAccess().getStrongAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationQualifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicationQualifierAccess().getFilteredQualifierParserRuleCall_0()); }
	ruleFilteredQualifier
{ after(grammarAccess.getImplicationQualifierAccess().getFilteredQualifierParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getImplicationQualifierAccess().getEveryQualifierParserRuleCall_1()); }
	ruleEveryQualifier
{ after(grammarAccess.getImplicationQualifierAccess().getEveryQualifierParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getImplicationQualifierAccess().getDelayedQualifierParserRuleCall_2()); }
	ruleDelayedQualifier
{ after(grammarAccess.getImplicationQualifierAccess().getDelayedQualifierParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getImplicationQualifierAccess().getSustainedQualifierParserRuleCall_3()); }
	ruleSustainedQualifier
{ after(grammarAccess.getImplicationQualifierAccess().getSustainedQualifierParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getImplicationQualifierAccess().getTimeDelayedQualifierParserRuleCall_4()); }
	ruleTimeDelayedQualifier
{ after(grammarAccess.getImplicationQualifierAccess().getTimeDelayedQualifierParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getImplicationQualifierAccess().getWhenQualifierParserRuleCall_5()); }
	ruleWhenQualifier
{ after(grammarAccess.getImplicationQualifierAccess().getWhenQualifierParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getImplicationQualifierAccess().getNextQualifierParserRuleCall_6()); }
	ruleNextQualifier
{ after(grammarAccess.getImplicationQualifierAccess().getNextQualifierParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getIntegerValueParserRuleCall_0()); }
	ruleIntegerValue
{ after(grammarAccess.getValueAccess().getIntegerValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getDecimalValueParserRuleCall_1()); }
	ruleDecimalValue
{ after(grammarAccess.getValueAccess().getDecimalValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getFloatValueParserRuleCall_2()); }
	ruleFloatValue
{ after(grammarAccess.getValueAccess().getFloatValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getRationalValueParserRuleCall_3()); }
	ruleRationalValue
{ after(grammarAccess.getValueAccess().getRationalValueParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getValueAccess().getLetValueParserRuleCall_4()); }
	ruleLetValue
{ after(grammarAccess.getValueAccess().getLetValueParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExprAccess().getValueParserRuleCall_0()); }
	ruleValue
{ after(grammarAccess.getBasicExprAccess().getValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBasicExprAccess().getGroup_1()); }
(rule__BasicExpr__Group_1__0)
{ after(grammarAccess.getBasicExprAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getBasicExprAccess().getCastParserRuleCall_2()); }
	ruleCast
{ after(grammarAccess.getBasicExprAccess().getCastParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getIntCastParserRuleCall_0()); }
	ruleIntCast
{ after(grammarAccess.getCastAccess().getIntCastParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCastAccess().getDecimalCastParserRuleCall_1()); }
	ruleDecimalCast
{ after(grammarAccess.getCastAccess().getDecimalCastParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCastAccess().getFloatCastParserRuleCall_2()); }
	ruleFloatCast
{ after(grammarAccess.getCastAccess().getFloatCastParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCastAccess().getRationalCastParserRuleCall_3()); }
	ruleRationalCast
{ after(grammarAccess.getCastAccess().getRationalCastParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatCast__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatCastAccess().getFloatKeyword_0_0()); }

	'[float ' 

{ after(grammarAccess.getFloatCastAccess().getFloatKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getFloatCastAccess().getDoubleKeyword_0_1()); }

	'[double' 

{ after(grammarAccess.getFloatCastAccess().getDoubleKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagRelation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagRelationAccess().getGroup_0()); }
(rule__TagRelation__Group_0__0)
{ after(grammarAccess.getTagRelationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTagRelationAccess().getGroup_1()); }
(rule__TagRelation__Group_1__0)
{ after(grammarAccess.getTagRelationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPragmaAccess().getStopPragmaParserRuleCall_0()); }
	ruleStopPragma
{ after(grammarAccess.getPragmaAccess().getStopPragmaParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPragmaAccess().getTagrefPragmaParserRuleCall_1()); }
	ruleTagrefPragma
{ after(grammarAccess.getPragmaAccess().getTagrefPragmaParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPragmaAccess().getTracePragmaParserRuleCall_2()); }
	ruleTracePragma
{ after(grammarAccess.getPragmaAccess().getTracePragmaParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPragmaAccess().getMaxstepPragmaParserRuleCall_3()); }
	ruleMaxstepPragma
{ after(grammarAccess.getPragmaAccess().getMaxstepPragmaParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPragmaAccess().getOutputPragmaParserRuleCall_4()); }
	ruleOutputPragma
{ after(grammarAccess.getPragmaAccess().getOutputPragmaParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPragmaAccess().getDoubleCalcPragmaParserRuleCall_5()); }
	ruleDoubleCalcPragma
{ after(grammarAccess.getPragmaAccess().getDoubleCalcPragmaParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPragmaAccess().getDumpResultPragmaParserRuleCall_6()); }
	ruleDumpResultPragma
{ after(grammarAccess.getPragmaAccess().getDumpResultPragmaParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__TypeAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getTypeVcdKeyword_2_0_0()); }

	'vcd' 

{ after(grammarAccess.getOutputPragmaAccess().getTypeVcdKeyword_2_0_0()); }
)

    |(
{ before(grammarAccess.getOutputPragmaAccess().getTypeTikzKeyword_2_0_1()); }

	'tikz' 

{ after(grammarAccess.getOutputPragmaAccess().getTypeTikzKeyword_2_0_1()); }
)

    |(
{ before(grammarAccess.getOutputPragmaAccess().getTypeSvgKeyword_2_0_2()); }

	'svg' 

{ after(grammarAccess.getOutputPragmaAccess().getTypeSvgKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTUNITEnumLiteralDeclaration_0()); }
(	'U-clock' 
)
{ after(grammarAccess.getTypeAccess().getTUNITEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTUNITEnumLiteralDeclaration_1()); }
(	'unit-clock' 
)
{ after(grammarAccess.getTypeAccess().getTUNITEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTINTEnumLiteralDeclaration_2()); }
(	'Z-clock' 
)
{ after(grammarAccess.getTypeAccess().getTINTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTINTEnumLiteralDeclaration_3()); }
(	'int-clock' 
)
{ after(grammarAccess.getTypeAccess().getTINTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTDECEnumLiteralDeclaration_4()); }
(	'D-clock' 
)
{ after(grammarAccess.getTypeAccess().getTDECEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTDECEnumLiteralDeclaration_5()); }
(	'decimal-clock' 
)
{ after(grammarAccess.getTypeAccess().getTDECEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTRATEnumLiteralDeclaration_6()); }
(	'Q-clock' 
)
{ after(grammarAccess.getTypeAccess().getTRATEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTRATEnumLiteralDeclaration_7()); }
(	'rational-clock' 
)
{ after(grammarAccess.getTypeAccess().getTRATEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTFLOATEnumLiteralDeclaration_8()); }
(	'F-clock' 
)
{ after(grammarAccess.getTypeAccess().getTFLOATEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTFLOATEnumLiteralDeclaration_9()); }
(	'float-clock' 
)
{ after(grammarAccess.getTypeAccess().getTFLOATEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTFLOATEnumLiteralDeclaration_10()); }
(	'double-clock' 
)
{ after(grammarAccess.getTypeAccess().getTFLOATEnumLiteralDeclaration_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getTINTEnumLiteralDeclaration_0()); }
(	'int' 
)
{ after(grammarAccess.getValueTypeAccess().getTINTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getTDECEnumLiteralDeclaration_1()); }
(	'decimal' 
)
{ after(grammarAccess.getValueTypeAccess().getTDECEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getTRATEnumLiteralDeclaration_2()); }
(	'rational' 
)
{ after(grammarAccess.getValueTypeAccess().getTRATEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getTFLOATEnumLiteralDeclaration_3()); }
(	'double' 
)
{ after(grammarAccess.getValueTypeAccess().getTFLOATEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getTFLOATEnumLiteralDeclaration_4()); }
(	'float' 
)
{ after(grammarAccess.getValueTypeAccess().getTFLOATEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpTerm__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpTermAccess().getPLUSEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getOpTermAccess().getPLUSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOpTermAccess().getMINUSEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getOpTermAccess().getMINUSEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpFact__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpFactAccess().getTIMESEnumLiteralDeclaration_0()); }
(	'*' 
)
{ after(grammarAccess.getOpFactAccess().getTIMESEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOpFactAccess().getDIVEnumLiteralDeclaration_1()); }
(	'/' 
)
{ after(grammarAccess.getOpFactAccess().getDIVEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ROUNDING_MODE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getROUNDING_MODEAccess().getROUND_UPEnumLiteralDeclaration_0()); }
(	'round_up' 
)
{ after(grammarAccess.getROUNDING_MODEAccess().getROUND_UPEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getROUNDING_MODEAccess().getROUND_DOWNEnumLiteralDeclaration_1()); }
(	'round_down' 
)
{ after(grammarAccess.getROUNDING_MODEAccess().getROUND_DOWNEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getROUNDING_MODEAccess().getROUND_CEILINGEnumLiteralDeclaration_2()); }
(	'round_ceil' 
)
{ after(grammarAccess.getROUNDING_MODEAccess().getROUND_CEILINGEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getROUNDING_MODEAccess().getROUND_FLOOREnumLiteralDeclaration_3()); }
(	'round_floor' 
)
{ after(grammarAccess.getROUNDING_MODEAccess().getROUND_FLOOREnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getROUNDING_MODEAccess().getROUND_HALF_UPEnumLiteralDeclaration_4()); }
(	'round_half_up' 
)
{ after(grammarAccess.getROUNDING_MODEAccess().getROUND_HALF_UPEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getROUNDING_MODEAccess().getROUND_HALF_DOWNEnumLiteralDeclaration_5()); }
(	'round_half_down' 
)
{ after(grammarAccess.getROUNDING_MODEAccess().getROUND_HALF_DOWNEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getROUNDING_MODEAccess().getROUND_HALF_EVENEnumLiteralDeclaration_6()); }
(	'round_half_even' 
)
{ after(grammarAccess.getROUNDING_MODEAccess().getROUND_HALF_EVENEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Clock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clock__Group__0__Impl
	rule__Clock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockAccess().getNongreedyAssignment_0()); }
(rule__Clock__NongreedyAssignment_0)?
{ after(grammarAccess.getClockAccess().getNongreedyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clock__Group__1__Impl
	rule__Clock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Clock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockAccess().getTypeAssignment_1()); }
(rule__Clock__TypeAssignment_1)
{ after(grammarAccess.getClockAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clock__Group__2__Impl
	rule__Clock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Clock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockAccess().getNameAssignment_2()); }
(rule__Clock__NameAssignment_2)
{ after(grammarAccess.getClockAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockAccess().getQualAssignment_3()); }
(rule__Clock__QualAssignment_3)?
{ after(grammarAccess.getClockAccess().getQualAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PeriodicQualifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PeriodicQualifier__Group__0__Impl
	rule__PeriodicQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicQualifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPeriodicQualifierAccess().getPeriodicKeyword_0()); }

	'periodic' 

{ after(grammarAccess.getPeriodicQualifierAccess().getPeriodicKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PeriodicQualifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PeriodicQualifier__Group__1__Impl
	rule__PeriodicQualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicQualifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPeriodicQualifierAccess().getPeriodAssignment_1()); }
(rule__PeriodicQualifier__PeriodAssignment_1)
{ after(grammarAccess.getPeriodicQualifierAccess().getPeriodAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PeriodicQualifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PeriodicQualifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicQualifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPeriodicQualifierAccess().getGroup_2()); }
(rule__PeriodicQualifier__Group_2__0)?
{ after(grammarAccess.getPeriodicQualifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PeriodicQualifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PeriodicQualifier__Group_2__0__Impl
	rule__PeriodicQualifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicQualifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPeriodicQualifierAccess().getOffsetKeyword_2_0()); }

	'offset' 

{ after(grammarAccess.getPeriodicQualifierAccess().getOffsetKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PeriodicQualifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PeriodicQualifier__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicQualifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPeriodicQualifierAccess().getOffsetAssignment_2_1()); }
(rule__PeriodicQualifier__OffsetAssignment_2_1)
{ after(grammarAccess.getPeriodicQualifierAccess().getOffsetAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SporadicQualifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SporadicQualifier__Group__0__Impl
	rule__SporadicQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SporadicQualifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSporadicQualifierAccess().getSporadicQualifierAction_0()); }
(

)
{ after(grammarAccess.getSporadicQualifierAccess().getSporadicQualifierAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SporadicQualifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SporadicQualifier__Group__1__Impl
	rule__SporadicQualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SporadicQualifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSporadicQualifierAccess().getSporadicKeyword_1()); }

	'sporadic' 

{ after(grammarAccess.getSporadicQualifierAccess().getSporadicKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SporadicQualifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SporadicQualifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SporadicQualifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSporadicQualifierAccess().getGroup_2()); }
(rule__SporadicQualifier__Group_2__0)?
{ after(grammarAccess.getSporadicQualifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SporadicQualifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SporadicQualifier__Group_2__0__Impl
	rule__SporadicQualifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SporadicQualifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSporadicQualifierAccess().getInstantsAssignment_2_0()); }
(rule__SporadicQualifier__InstantsAssignment_2_0)
{ after(grammarAccess.getSporadicQualifierAccess().getInstantsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SporadicQualifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SporadicQualifier__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SporadicQualifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSporadicQualifierAccess().getGroup_2_1()); }
(rule__SporadicQualifier__Group_2_1__0)*
{ after(grammarAccess.getSporadicQualifierAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SporadicQualifier__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SporadicQualifier__Group_2_1__0__Impl
	rule__SporadicQualifier__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SporadicQualifier__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSporadicQualifierAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getSporadicQualifierAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SporadicQualifier__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SporadicQualifier__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SporadicQualifier__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSporadicQualifierAccess().getInstantsAssignment_2_1_1()); }
(rule__SporadicQualifier__InstantsAssignment_2_1_1)
{ after(grammarAccess.getSporadicQualifierAccess().getInstantsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImplicationRelation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplicationRelation__Group__0__Impl
	rule__ImplicationRelation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRelation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicationRelationAccess().getSourceAssignment_0()); }
(rule__ImplicationRelation__SourceAssignment_0)
{ after(grammarAccess.getImplicationRelationAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImplicationRelation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplicationRelation__Group__1__Impl
	rule__ImplicationRelation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRelation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicationRelationAccess().getQualAssignment_1()); }
(rule__ImplicationRelation__QualAssignment_1)?
{ after(grammarAccess.getImplicationRelationAccess().getQualAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImplicationRelation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplicationRelation__Group__2__Impl
	rule__ImplicationRelation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRelation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicationRelationAccess().getImpliesKeyword_2()); }

	'implies' 

{ after(grammarAccess.getImplicationRelationAccess().getImpliesKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImplicationRelation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplicationRelation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRelation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicationRelationAccess().getTargetAssignment_3()); }
(rule__ImplicationRelation__TargetAssignment_3)
{ after(grammarAccess.getImplicationRelationAccess().getTargetAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AwaitImplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitImplication__Group__0__Impl
	rule__AwaitImplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getAwaitKeyword_0()); }

	'await' 

{ after(grammarAccess.getAwaitImplicationAccess().getAwaitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitImplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitImplication__Group__1__Impl
	rule__AwaitImplication__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAwaitImplicationAccess().getMastersAssignment_1()); }
(rule__AwaitImplication__MastersAssignment_1)
{ after(grammarAccess.getAwaitImplicationAccess().getMastersAssignment_1()); }
)
(
{ before(grammarAccess.getAwaitImplicationAccess().getMastersAssignment_1()); }
(rule__AwaitImplication__MastersAssignment_1)*
{ after(grammarAccess.getAwaitImplicationAccess().getMastersAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitImplication__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitImplication__Group__2__Impl
	rule__AwaitImplication__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getGroup_2()); }
(rule__AwaitImplication__Group_2__0)?
{ after(grammarAccess.getAwaitImplicationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitImplication__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitImplication__Group__3__Impl
	rule__AwaitImplication__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getImpliesKeyword_3()); }

	'implies' 

{ after(grammarAccess.getAwaitImplicationAccess().getImpliesKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitImplication__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitImplication__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getTargetAssignment_4()); }
(rule__AwaitImplication__TargetAssignment_4)
{ after(grammarAccess.getAwaitImplicationAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AwaitImplication__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitImplication__Group_2__0__Impl
	rule__AwaitImplication__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getWithKeyword_2_0()); }

	'with' 

{ after(grammarAccess.getAwaitImplicationAccess().getWithKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitImplication__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitImplication__Group_2__1__Impl
	rule__AwaitImplication__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getAlternatives_2_1()); }
(rule__AwaitImplication__Alternatives_2_1)
{ after(grammarAccess.getAwaitImplicationAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitImplication__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitImplication__Group_2__2__Impl
	rule__AwaitImplication__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getResetKeyword_2_2()); }

	'reset' 

{ after(grammarAccess.getAwaitImplicationAccess().getResetKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitImplication__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitImplication__Group_2__3__Impl
	rule__AwaitImplication__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getOnKeyword_2_3()); }

	'on' 

{ after(grammarAccess.getAwaitImplicationAccess().getOnKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitImplication__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitImplication__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getResetAssignment_2_4()); }
(rule__AwaitImplication__ResetAssignment_2_4)
{ after(grammarAccess.getAwaitImplicationAccess().getResetAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FilteredQualifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilteredQualifier__Group__0__Impl
	rule__FilteredQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilteredQualifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredQualifierAccess().getFilteredKeyword_0()); }

	'filtered' 

{ after(grammarAccess.getFilteredQualifierAccess().getFilteredKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilteredQualifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilteredQualifier__Group__1__Impl
	rule__FilteredQualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilteredQualifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredQualifierAccess().getByKeyword_1()); }

	'by' 

{ after(grammarAccess.getFilteredQualifierAccess().getByKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilteredQualifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilteredQualifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilteredQualifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredQualifierAccess().getPatternAssignment_2()); }
(rule__FilteredQualifier__PatternAssignment_2)
{ after(grammarAccess.getFilteredQualifierAccess().getPatternAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EveryQualifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryQualifier__Group__0__Impl
	rule__EveryQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryQualifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryQualifierAccess().getEveryKeyword_0()); }

	'every' 

{ after(grammarAccess.getEveryQualifierAccess().getEveryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryQualifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryQualifier__Group__1__Impl
	rule__EveryQualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryQualifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryQualifierAccess().getPeriodAssignment_1()); }
(rule__EveryQualifier__PeriodAssignment_1)
{ after(grammarAccess.getEveryQualifierAccess().getPeriodAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryQualifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryQualifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryQualifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryQualifierAccess().getGroup_2()); }
(rule__EveryQualifier__Group_2__0)?
{ after(grammarAccess.getEveryQualifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EveryQualifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryQualifier__Group_2__0__Impl
	rule__EveryQualifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryQualifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryQualifierAccess().getOffAssignment_2_0()); }
(rule__EveryQualifier__OffAssignment_2_0)
{ after(grammarAccess.getEveryQualifierAccess().getOffAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryQualifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryQualifier__Group_2__1__Impl
	rule__EveryQualifier__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryQualifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryQualifierAccess().getAtKeyword_2_1()); }

	'at' 

{ after(grammarAccess.getEveryQualifierAccess().getAtKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryQualifier__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryQualifier__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryQualifier__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryQualifierAccess().getOffsetAssignment_2_2()); }
(rule__EveryQualifier__OffsetAssignment_2_2)
{ after(grammarAccess.getEveryQualifierAccess().getOffsetAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DelayedQualifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayedQualifier__Group__0__Impl
	rule__DelayedQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getImmediatelyAssignment_0()); }
(rule__DelayedQualifier__ImmediatelyAssignment_0)?
{ after(grammarAccess.getDelayedQualifierAccess().getImmediatelyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayedQualifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayedQualifier__Group__1__Impl
	rule__DelayedQualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getDelayedKeyword_1()); }

	'delayed' 

{ after(grammarAccess.getDelayedQualifierAccess().getDelayedKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayedQualifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayedQualifier__Group__2__Impl
	rule__DelayedQualifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getByKeyword_2()); }

	'by' 

{ after(grammarAccess.getDelayedQualifierAccess().getByKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayedQualifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayedQualifier__Group__3__Impl
	rule__DelayedQualifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getCountAssignment_3()); }
(rule__DelayedQualifier__CountAssignment_3)
{ after(grammarAccess.getDelayedQualifierAccess().getCountAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayedQualifier__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayedQualifier__Group__4__Impl
	rule__DelayedQualifier__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getGroup_4()); }
(rule__DelayedQualifier__Group_4__0)?
{ after(grammarAccess.getDelayedQualifierAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayedQualifier__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayedQualifier__Group__5__Impl
	rule__DelayedQualifier__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getOnKeyword_5()); }

	'on' 

{ after(grammarAccess.getDelayedQualifierAccess().getOnKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayedQualifier__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayedQualifier__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getClockAssignment_6()); }
(rule__DelayedQualifier__ClockAssignment_6)
{ after(grammarAccess.getDelayedQualifierAccess().getClockAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__DelayedQualifier__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayedQualifier__Group_4__0__Impl
	rule__DelayedQualifier__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getResetAssignment_4_0()); }
(rule__DelayedQualifier__ResetAssignment_4_0)
{ after(grammarAccess.getDelayedQualifierAccess().getResetAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayedQualifier__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayedQualifier__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getResetKeyword_4_1()); }

	'reset' 

{ after(grammarAccess.getDelayedQualifierAccess().getResetKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SustainedQualifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SustainedQualifier__Group__0__Impl
	rule__SustainedQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SustainedQualifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainedQualifierAccess().getSustainedKeyword_0()); }

	'sustained' 

{ after(grammarAccess.getSustainedQualifierAccess().getSustainedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SustainedQualifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SustainedQualifier__Group__1__Impl
	rule__SustainedQualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SustainedQualifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainedQualifierAccess().getImmediatelyAssignment_1()); }
(rule__SustainedQualifier__ImmediatelyAssignment_1)?
{ after(grammarAccess.getSustainedQualifierAccess().getImmediatelyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SustainedQualifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SustainedQualifier__Group__2__Impl
	rule__SustainedQualifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SustainedQualifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainedQualifierAccess().getFromKeyword_2()); }

	'from' 

{ after(grammarAccess.getSustainedQualifierAccess().getFromKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SustainedQualifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SustainedQualifier__Group__3__Impl
	rule__SustainedQualifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SustainedQualifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainedQualifierAccess().getStartClockAssignment_3()); }
(rule__SustainedQualifier__StartClockAssignment_3)
{ after(grammarAccess.getSustainedQualifierAccess().getStartClockAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SustainedQualifier__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SustainedQualifier__Group__4__Impl
	rule__SustainedQualifier__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SustainedQualifier__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainedQualifierAccess().getToKeyword_4()); }

	'to' 

{ after(grammarAccess.getSustainedQualifierAccess().getToKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SustainedQualifier__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SustainedQualifier__Group__5__Impl
	rule__SustainedQualifier__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SustainedQualifier__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainedQualifierAccess().getEndClockAssignment_5()); }
(rule__SustainedQualifier__EndClockAssignment_5)
{ after(grammarAccess.getSustainedQualifierAccess().getEndClockAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SustainedQualifier__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SustainedQualifier__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SustainedQualifier__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainedQualifierAccess().getWeaklyAssignment_6()); }
(rule__SustainedQualifier__WeaklyAssignment_6)?
{ after(grammarAccess.getSustainedQualifierAccess().getWeaklyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TimeDelayedQualifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__Group__0__Impl
	rule__TimeDelayedQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getTimeKeyword_0()); }

	'time' 

{ after(grammarAccess.getTimeDelayedQualifierAccess().getTimeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__Group__1__Impl
	rule__TimeDelayedQualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getDelayedKeyword_1()); }

	'delayed' 

{ after(grammarAccess.getTimeDelayedQualifierAccess().getDelayedKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__Group__2__Impl
	rule__TimeDelayedQualifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getByKeyword_2()); }

	'by' 

{ after(grammarAccess.getTimeDelayedQualifierAccess().getByKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__Group__3__Impl
	rule__TimeDelayedQualifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getDelayAssignment_3()); }
(rule__TimeDelayedQualifier__DelayAssignment_3)
{ after(grammarAccess.getTimeDelayedQualifierAccess().getDelayAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__Group__4__Impl
	rule__TimeDelayedQualifier__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getOnKeyword_4()); }

	'on' 

{ after(grammarAccess.getTimeDelayedQualifierAccess().getOnKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__Group__5__Impl
	rule__TimeDelayedQualifier__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getClockAssignment_5()); }
(rule__TimeDelayedQualifier__ClockAssignment_5)
{ after(grammarAccess.getTimeDelayedQualifierAccess().getClockAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getGroup_6()); }
(rule__TimeDelayedQualifier__Group_6__0)?
{ after(grammarAccess.getTimeDelayedQualifierAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TimeDelayedQualifier__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__Group_6__0__Impl
	rule__TimeDelayedQualifier__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getResetAssignment_6_0()); }
(rule__TimeDelayedQualifier__ResetAssignment_6_0)
{ after(grammarAccess.getTimeDelayedQualifierAccess().getResetAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__Group_6__1__Impl
	rule__TimeDelayedQualifier__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1()); }
(rule__TimeDelayedQualifier__UnorderedGroup_6_1)
{ after(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__Group_6__2__Impl
	rule__TimeDelayedQualifier__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getResetKeyword_6_2()); }

	'reset' 

{ after(grammarAccess.getTimeDelayedQualifierAccess().getResetKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__Group_6__3__Impl
	rule__TimeDelayedQualifier__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getOnKeyword_6_3()); }

	'on' 

{ after(grammarAccess.getTimeDelayedQualifierAccess().getOnKeyword_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getResetClockAssignment_6_4()); }
(rule__TimeDelayedQualifier__ResetClockAssignment_6_4)
{ after(grammarAccess.getTimeDelayedQualifierAccess().getResetClockAssignment_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Let__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Let__Group__0__Impl
	rule__Let__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetAccess().getLetKeyword_0()); }

	'let' 

{ after(grammarAccess.getLetAccess().getLetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Let__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Let__Group__1__Impl
	rule__Let__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetAccess().getTypeAssignment_1()); }
(rule__Let__TypeAssignment_1)
{ after(grammarAccess.getLetAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Let__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Let__Group__2__Impl
	rule__Let__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetAccess().getNameAssignment_2()); }
(rule__Let__NameAssignment_2)
{ after(grammarAccess.getLetAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Let__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Let__Group__3__Impl
	rule__Let__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getLetAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Let__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Let__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetAccess().getValueAssignment_4()); }
(rule__Let__ValueAssignment_4)
{ after(grammarAccess.getLetAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IntegerValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerValue__Group__0__Impl
	rule__IntegerValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerValueAccess().getSignAssignment_0()); }
(rule__IntegerValue__SignAssignment_0)?
{ after(grammarAccess.getIntegerValueAccess().getSignAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerValueAccess().getValueAssignment_1()); }
(rule__IntegerValue__ValueAssignment_1)
{ after(grammarAccess.getIntegerValueAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DecimalValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DecimalValue__Group__0__Impl
	rule__DecimalValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalValueAccess().getSignAssignment_0()); }
(rule__DecimalValue__SignAssignment_0)?
{ after(grammarAccess.getDecimalValueAccess().getSignAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DecimalValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DecimalValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalValueAccess().getValueAssignment_1()); }
(rule__DecimalValue__ValueAssignment_1)
{ after(grammarAccess.getDecimalValueAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FloatValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatValue__Group__0__Impl
	rule__FloatValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatValueAccess().getSignAssignment_0()); }
(rule__FloatValue__SignAssignment_0)?
{ after(grammarAccess.getFloatValueAccess().getSignAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatValueAccess().getValueAssignment_1()); }
(rule__FloatValue__ValueAssignment_1)
{ after(grammarAccess.getFloatValueAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RationalValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RationalValue__Group__0__Impl
	rule__RationalValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RationalValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationalValueAccess().getSignAssignment_0()); }
(rule__RationalValue__SignAssignment_0)?
{ after(grammarAccess.getRationalValueAccess().getSignAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RationalValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RationalValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RationalValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationalValueAccess().getValueAssignment_1()); }
(rule__RationalValue__ValueAssignment_1)
{ after(grammarAccess.getRationalValueAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetValue__Group__0__Impl
	rule__LetValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetValueAccess().getDollarSignKeyword_0()); }

	'$' 

{ after(grammarAccess.getLetValueAccess().getDollarSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetValueAccess().getRefAssignment_1()); }
(rule__LetValue__RefAssignment_1)
{ after(grammarAccess.getLetValueAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
	ruleFactor
{ after(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getGroup_1()); }
(rule__Term__Group_1__0)*
{ after(grammarAccess.getTermAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getBinOpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getTermAccess().getBinOpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__1__Impl
	rule__Term__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOpAssignment_1_1()); }
(rule__Term__OpAssignment_1_1)
{ after(grammarAccess.getTermAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getRightAssignment_1_2()); }
(rule__Term__RightAssignment_1_2)
{ after(grammarAccess.getTermAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Factor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getBasicExprParserRuleCall_0()); }
	ruleBasicExpr
{ after(grammarAccess.getFactorAccess().getBasicExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getGroup_1()); }
(rule__Factor__Group_1__0)*
{ after(grammarAccess.getFactorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Factor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getBinOpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getFactorAccess().getBinOpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_1__1__Impl
	rule__Factor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getOpAssignment_1_1()); }
(rule__Factor__OpAssignment_1_1)
{ after(grammarAccess.getFactorAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getRightAssignment_1_2()); }
(rule__Factor__RightAssignment_1_2)
{ after(grammarAccess.getFactorAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BasicExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicExpr__Group_1__0__Impl
	rule__BasicExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExprAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getBasicExprAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicExpr__Group_1__1__Impl
	rule__BasicExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExprAccess().getExpressionParserRuleCall_1_1()); }
	ruleExpression
{ after(grammarAccess.getBasicExprAccess().getExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExprAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getBasicExprAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IntCast__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntCast__Group__0__Impl
	rule__IntCast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntCast__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntCastAccess().getIntKeyword_0()); }

	'[int ' 

{ after(grammarAccess.getIntCastAccess().getIntKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntCast__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntCast__Group__1__Impl
	rule__IntCast__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntCast__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntCastAccess().getExprAssignment_1()); }
(rule__IntCast__ExprAssignment_1)
{ after(grammarAccess.getIntCastAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntCast__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntCast__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntCast__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntCastAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getIntCastAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FloatCast__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatCast__Group__0__Impl
	rule__FloatCast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatCast__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatCastAccess().getAlternatives_0()); }
(rule__FloatCast__Alternatives_0)
{ after(grammarAccess.getFloatCastAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatCast__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatCast__Group__1__Impl
	rule__FloatCast__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatCast__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatCastAccess().getExprAssignment_1()); }
(rule__FloatCast__ExprAssignment_1)
{ after(grammarAccess.getFloatCastAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatCast__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatCast__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatCast__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatCastAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getFloatCastAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DecimalCast__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DecimalCast__Group__0__Impl
	rule__DecimalCast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalCast__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalCastAccess().getDecimalKeyword_0()); }

	'[decimal' 

{ after(grammarAccess.getDecimalCastAccess().getDecimalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DecimalCast__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DecimalCast__Group__1__Impl
	rule__DecimalCast__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalCast__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalCastAccess().getExprAssignment_1()); }
(rule__DecimalCast__ExprAssignment_1)
{ after(grammarAccess.getDecimalCastAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DecimalCast__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DecimalCast__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalCast__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalCastAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getDecimalCastAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RationalCast__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RationalCast__Group__0__Impl
	rule__RationalCast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RationalCast__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationalCastAccess().getRationalKeyword_0()); }

	'[rational ' 

{ after(grammarAccess.getRationalCastAccess().getRationalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RationalCast__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RationalCast__Group__1__Impl
	rule__RationalCast__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RationalCast__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationalCastAccess().getExprAssignment_1()); }
(rule__RationalCast__ExprAssignment_1)
{ after(grammarAccess.getRationalCastAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RationalCast__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RationalCast__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RationalCast__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationalCastAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getRationalCastAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WhenQualifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenQualifier__Group__0__Impl
	rule__WhenQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenQualifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenQualifierAccess().getWhenKeyword_0()); }

	'when' 

{ after(grammarAccess.getWhenQualifierAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenQualifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenQualifier__Group__1__Impl
	rule__WhenQualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenQualifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenQualifierAccess().getNotAssignment_1()); }
(rule__WhenQualifier__NotAssignment_1)?
{ after(grammarAccess.getWhenQualifierAccess().getNotAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenQualifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenQualifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenQualifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenQualifierAccess().getClockAssignment_2()); }
(rule__WhenQualifier__ClockAssignment_2)
{ after(grammarAccess.getWhenQualifierAccess().getClockAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NextQualifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextQualifier__Group__0__Impl
	rule__NextQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NextQualifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextQualifierAccess().getStrictAssignment_0()); }
(rule__NextQualifier__StrictAssignment_0)?
{ after(grammarAccess.getNextQualifierAccess().getStrictAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextQualifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextQualifier__Group__1__Impl
	rule__NextQualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NextQualifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextQualifierAccess().getNextKeyword_1()); }

	'next' 

{ after(grammarAccess.getNextQualifierAccess().getNextKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextQualifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextQualifier__Group__2__Impl
	rule__NextQualifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NextQualifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextQualifierAccess().getToKeyword_2()); }

	'to' 

{ after(grammarAccess.getNextQualifierAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextQualifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextQualifier__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NextQualifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextQualifierAccess().getClockAssignment_3()); }
(rule__NextQualifier__ClockAssignment_3)
{ after(grammarAccess.getNextQualifierAccess().getClockAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Pattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pattern__Group__0__Impl
	rule__Pattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getSkipAssignment_0()); }
(rule__Pattern__SkipAssignment_0)
{ after(grammarAccess.getPatternAccess().getSkipAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pattern__Group__1__Impl
	rule__Pattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getPatternAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pattern__Group__2__Impl
	rule__Pattern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getKeepAssignment_2()); }
(rule__Pattern__KeepAssignment_2)
{ after(grammarAccess.getPatternAccess().getKeepAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pattern__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getGroup_3()); }
(rule__Pattern__Group_3__0)?
{ after(grammarAccess.getPatternAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Pattern__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pattern__Group_3__0__Impl
	rule__Pattern__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getRepAssignment_3_0()); }
(rule__Pattern__RepAssignment_3_0)
{ after(grammarAccess.getPatternAccess().getRepAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pattern__Group_3__1__Impl
	rule__Pattern__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getRepskipAssignment_3_1()); }
(rule__Pattern__RepskipAssignment_3_1)
{ after(grammarAccess.getPatternAccess().getRepskipAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pattern__Group_3__2__Impl
	rule__Pattern__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getCommaKeyword_3_2()); }

	',' 

{ after(grammarAccess.getPatternAccess().getCommaKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pattern__Group_3__3__Impl
	rule__Pattern__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getRepkeepAssignment_3_3()); }
(rule__Pattern__RepkeepAssignment_3_3)
{ after(grammarAccess.getPatternAccess().getRepkeepAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pattern__Group_3__4__Impl
	rule__Pattern__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getRightParenthesisKeyword_3_4()); }

	')' 

{ after(grammarAccess.getPatternAccess().getRightParenthesisKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pattern__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getAsteriskKeyword_3_5()); }

	'*' 

{ after(grammarAccess.getPatternAccess().getAsteriskKeyword_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TagRelation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagRelation__Group_0__0__Impl
	rule__TagRelation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagRelation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagRelationAccess().getTagKeyword_0_0()); }

	'tag' 

{ after(grammarAccess.getTagRelationAccess().getTagKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagRelation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagRelation__Group_0__1__Impl
	rule__TagRelation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagRelation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagRelationAccess().getRelationKeyword_0_1()); }

	'relation' 

{ after(grammarAccess.getTagRelationAccess().getRelationKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagRelation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagRelation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagRelation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagRelationAccess().getExprAssignment_0_2()); }
(rule__TagRelation__ExprAssignment_0_2)
{ after(grammarAccess.getTagRelationAccess().getExprAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TagRelation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagRelation__Group_1__0__Impl
	rule__TagRelation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagRelation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagRelationAccess().getTimeKeyword_1_0()); }

	'time' 

{ after(grammarAccess.getTagRelationAccess().getTimeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagRelation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagRelation__Group_1__1__Impl
	rule__TagRelation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagRelation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagRelationAccess().getRelationKeyword_1_1()); }

	'relation' 

{ after(grammarAccess.getTagRelationAccess().getRelationKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagRelation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagRelation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagRelation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagRelationAccess().getExprAssignment_1_2()); }
(rule__TagRelation__ExprAssignment_1_2)
{ after(grammarAccess.getTagRelationAccess().getExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TagExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group__0__Impl
	rule__TagExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getTagExprAction_0()); }
(

)
{ after(grammarAccess.getTagExprAccess().getTagExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group__1__Impl
	rule__TagExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getClockYAssignment_1()); }
(rule__TagExpr__ClockYAssignment_1)
{ after(grammarAccess.getTagExprAccess().getClockYAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group__2__Impl
	rule__TagExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getTagExprAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group__3__Impl
	rule__TagExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getGroup_3()); }
(rule__TagExpr__Group_3__0)?
{ after(grammarAccess.getTagExprAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group__4__Impl
	rule__TagExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getClockXAssignment_4()); }
(rule__TagExpr__ClockXAssignment_4)
{ after(grammarAccess.getTagExprAccess().getClockXAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagExpr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group__5__Impl
	rule__TagExpr__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getGroup_5()); }
(rule__TagExpr__Group_5__0)?
{ after(grammarAccess.getTagExprAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagExpr__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getGroup_6()); }
(rule__TagExpr__Group_6__0)?
{ after(grammarAccess.getTagExprAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TagExpr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group_3__0__Impl
	rule__TagExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getValueAAssignment_3_0()); }
(rule__TagExpr__ValueAAssignment_3_0)
{ after(grammarAccess.getTagExprAccess().getValueAAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagExpr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getAsteriskKeyword_3_1()); }

	'*' 

{ after(grammarAccess.getTagExprAccess().getAsteriskKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TagExpr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group_5__0__Impl
	rule__TagExpr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getCircumflexAccentKeyword_5_0()); }

	'^' 

{ after(grammarAccess.getTagExprAccess().getCircumflexAccentKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagExpr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getValueNAssignment_5_1()); }
(rule__TagExpr__ValueNAssignment_5_1)
{ after(grammarAccess.getTagExprAccess().getValueNAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TagExpr__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group_6__0__Impl
	rule__TagExpr__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getPlusSignKeyword_6_0()); }

	'+' 

{ after(grammarAccess.getTagExprAccess().getPlusSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagExpr__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagExpr__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getValueBAssignment_6_1()); }
(rule__TagExpr__ValueBAssignment_6_1)
{ after(grammarAccess.getTagExprAccess().getValueBAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StopPragma__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StopPragma__Group__0__Impl
	rule__StopPragma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StopPragma__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStopPragmaAccess().getStopKeyword_0()); }

	'@stop' 

{ after(grammarAccess.getStopPragmaAccess().getStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StopPragma__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StopPragma__Group__1__Impl
	rule__StopPragma__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StopPragma__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStopPragmaAccess().getWhenKeyword_1()); }

	'when' 

{ after(grammarAccess.getStopPragmaAccess().getWhenKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StopPragma__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StopPragma__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StopPragma__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStopPragmaAccess().getClockAssignment_2()); }
(rule__StopPragma__ClockAssignment_2)
{ after(grammarAccess.getStopPragmaAccess().getClockAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TagrefPragma__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagrefPragma__Group__0__Impl
	rule__TagrefPragma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagrefPragma__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagrefPragmaAccess().getTagrefKeyword_0()); }

	'@tagref' 

{ after(grammarAccess.getTagrefPragmaAccess().getTagrefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagrefPragma__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagrefPragma__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagrefPragma__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagrefPragmaAccess().getClockAssignment_1()); }
(rule__TagrefPragma__ClockAssignment_1)
{ after(grammarAccess.getTagrefPragmaAccess().getClockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TracePragma__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TracePragma__Group__0__Impl
	rule__TracePragma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TracePragma__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracePragmaAccess().getTraceKeyword_0()); }

	'@trace' 

{ after(grammarAccess.getTracePragmaAccess().getTraceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TracePragma__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TracePragma__Group__1__Impl
	rule__TracePragma__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TracePragma__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracePragmaAccess().getKindsAssignment_1()); }
(rule__TracePragma__KindsAssignment_1)
{ after(grammarAccess.getTracePragmaAccess().getKindsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TracePragma__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TracePragma__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TracePragma__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracePragmaAccess().getGroup_2()); }
(rule__TracePragma__Group_2__0)*
{ after(grammarAccess.getTracePragmaAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TracePragma__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TracePragma__Group_2__0__Impl
	rule__TracePragma__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TracePragma__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracePragmaAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getTracePragmaAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TracePragma__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TracePragma__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TracePragma__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracePragmaAccess().getKindsAssignment_2_1()); }
(rule__TracePragma__KindsAssignment_2_1)
{ after(grammarAccess.getTracePragmaAccess().getKindsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MaxstepPragma__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxstepPragma__Group__0__Impl
	rule__MaxstepPragma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxstepPragma__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxstepPragmaAccess().getMaxstepKeyword_0()); }

	'@maxstep' 

{ after(grammarAccess.getMaxstepPragmaAccess().getMaxstepKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxstepPragma__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxstepPragma__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxstepPragma__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxstepPragmaAccess().getValueAssignment_1()); }
(rule__MaxstepPragma__ValueAssignment_1)
{ after(grammarAccess.getMaxstepPragmaAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutputPragma__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group__0__Impl
	rule__OutputPragma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getOutputPragmaAction_0()); }
(

)
{ after(grammarAccess.getOutputPragmaAccess().getOutputPragmaAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group__1__Impl
	rule__OutputPragma__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getOutputKeyword_1()); }

	'@output' 

{ after(grammarAccess.getOutputPragmaAccess().getOutputKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group__2__Impl
	rule__OutputPragma__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getTypeAssignment_2()); }
(rule__OutputPragma__TypeAssignment_2)
{ after(grammarAccess.getOutputPragmaAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3()); }
(rule__OutputPragma__UnorderedGroup_3)
{ after(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OutputPragma__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_0__0__Impl
	rule__OutputPragma__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getSelectionAssignment_3_0_0()); }
(rule__OutputPragma__SelectionAssignment_3_0_0)
{ after(grammarAccess.getOutputPragmaAccess().getSelectionAssignment_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_0__1__Impl
	rule__OutputPragma__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getSelectedClocksAssignment_3_0_1()); }
(rule__OutputPragma__SelectedClocksAssignment_3_0_1)
{ after(grammarAccess.getOutputPragmaAccess().getSelectedClocksAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getGroup_3_0_2()); }
(rule__OutputPragma__Group_3_0_2__0)*
{ after(grammarAccess.getOutputPragmaAccess().getGroup_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OutputPragma__Group_3_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_0_2__0__Impl
	rule__OutputPragma__Group_3_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getCommaKeyword_3_0_2_0()); }

	',' 

{ after(grammarAccess.getOutputPragmaAccess().getCommaKeyword_3_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getSelectedClocksAssignment_3_0_2_1()); }
(rule__OutputPragma__SelectedClocksAssignment_3_0_2_1)
{ after(grammarAccess.getOutputPragmaAccess().getSelectedClocksAssignment_3_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutputPragma__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_1__0__Impl
	rule__OutputPragma__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getWindowAssignment_3_1_0()); }
(rule__OutputPragma__WindowAssignment_3_1_0)
{ after(grammarAccess.getOutputPragmaAccess().getWindowAssignment_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_1__1__Impl
	rule__OutputPragma__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getFromAssignment_3_1_1()); }
(rule__OutputPragma__FromAssignment_3_1_1)
{ after(grammarAccess.getOutputPragmaAccess().getFromAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_1__2__Impl
	rule__OutputPragma__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getToKeyword_3_1_2()); }

	'to' 

{ after(grammarAccess.getOutputPragmaAccess().getToKeyword_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getToAssignment_3_1_3()); }
(rule__OutputPragma__ToAssignment_3_1_3)
{ after(grammarAccess.getOutputPragmaAccess().getToAssignment_3_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OutputPragma__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_2__0__Impl
	rule__OutputPragma__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getLabelKeyword_3_2_0()); }

	'label' 

{ after(grammarAccess.getOutputPragmaAccess().getLabelKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_2__1__Impl
	rule__OutputPragma__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getIfKeyword_3_2_1()); }

	'if' 

{ after(grammarAccess.getOutputPragmaAccess().getIfKeyword_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_2__2__Impl
	rule__OutputPragma__Group_3_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getLabelifAssignment_3_2_2()); }
(rule__OutputPragma__LabelifAssignment_3_2_2)
{ after(grammarAccess.getOutputPragmaAccess().getLabelifAssignment_3_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getGroup_3_2_3()); }
(rule__OutputPragma__Group_3_2_3__0)*
{ after(grammarAccess.getOutputPragmaAccess().getGroup_3_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OutputPragma__Group_3_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_2_3__0__Impl
	rule__OutputPragma__Group_3_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getCommaKeyword_3_2_3_0()); }

	',' 

{ after(grammarAccess.getOutputPragmaAccess().getCommaKeyword_3_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getLabelifAssignment_3_2_3_1()); }
(rule__OutputPragma__LabelifAssignment_3_2_3_1)
{ after(grammarAccess.getOutputPragmaAccess().getLabelifAssignment_3_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutputPragma__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_3__0__Impl
	rule__OutputPragma__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getXscaledAssignment_3_3_0()); }
(rule__OutputPragma__XscaledAssignment_3_3_0)
{ after(grammarAccess.getOutputPragmaAccess().getXscaledAssignment_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getXscaleAssignment_3_3_1()); }
(rule__OutputPragma__XscaleAssignment_3_3_1)
{ after(grammarAccess.getOutputPragmaAccess().getXscaleAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutputPragma__Group_3_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_4__0__Impl
	rule__OutputPragma__Group_3_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getBorderKeyword_3_4_0()); }

	'border' 

{ after(grammarAccess.getOutputPragmaAccess().getBorderKeyword_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_4__1__Impl
	rule__OutputPragma__Group_3_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getEqualsSignKeyword_3_4_1()); }

	'=' 

{ after(grammarAccess.getOutputPragmaAccess().getEqualsSignKeyword_3_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getBorderAssignment_3_4_2()); }
(rule__OutputPragma__BorderAssignment_3_4_2)
{ after(grammarAccess.getOutputPragmaAccess().getBorderAssignment_3_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OutputPragma__Group_3_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_5__0__Impl
	rule__OutputPragma__Group_3_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getCssKeyword_3_5_0()); }

	'css' 

{ after(grammarAccess.getOutputPragmaAccess().getCssKeyword_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_5__1__Impl
	rule__OutputPragma__Group_3_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getEqualsSignKeyword_3_5_1()); }

	'=' 

{ after(grammarAccess.getOutputPragmaAccess().getEqualsSignKeyword_3_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getCssAssignment_3_5_2()); }
(rule__OutputPragma__CssAssignment_3_5_2)
{ after(grammarAccess.getOutputPragmaAccess().getCssAssignment_3_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OutputPragma__Group_3_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_7__0__Impl
	rule__OutputPragma__Group_3_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getJavascriptKeyword_3_7_0()); }

	'javascript' 

{ after(grammarAccess.getOutputPragmaAccess().getJavascriptKeyword_3_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_7__1__Impl
	rule__OutputPragma__Group_3_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getEqualsSignKeyword_3_7_1()); }

	'=' 

{ after(grammarAccess.getOutputPragmaAccess().getEqualsSignKeyword_3_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getJvsAssignment_3_7_2()); }
(rule__OutputPragma__JvsAssignment_3_7_2)
{ after(grammarAccess.getOutputPragmaAccess().getJvsAssignment_3_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OutputPragma__Group_3_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_8__0__Impl
	rule__OutputPragma__Group_3_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getStandaloneAssignment_3_8_0()); }
(rule__OutputPragma__StandaloneAssignment_3_8_0)
{ after(grammarAccess.getOutputPragmaAccess().getStandaloneAssignment_3_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__Group_3_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__Group_3_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__Group_3_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getOverwriteAssignment_3_8_1()); }
(rule__OutputPragma__OverwriteAssignment_3_8_1)?
{ after(grammarAccess.getOutputPragmaAccess().getOverwriteAssignment_3_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClockItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClockItem__Group__0__Impl
	rule__ClockItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClockItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockItemAccess().getClockAssignment_0()); }
(rule__ClockItem__ClockAssignment_0)
{ after(grammarAccess.getClockItemAccess().getClockAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClockItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClockItem__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClockItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockItemAccess().getGroup_1()); }
(rule__ClockItem__Group_1__0)?
{ after(grammarAccess.getClockItemAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClockItem__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClockItem__Group_1__0__Impl
	rule__ClockItem__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClockItem__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockItemAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); }

	'->' 

{ after(grammarAccess.getClockItemAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClockItem__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClockItem__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClockItem__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockItemAccess().getNewNameAssignment_1_1()); }
(rule__ClockItem__NewNameAssignment_1_1)
{ after(grammarAccess.getClockItemAccess().getNewNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DoubleCalcPragma__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleCalcPragma__Group__0__Impl
	rule__DoubleCalcPragma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCalcPragma__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getDoublecalcKeyword_0()); }

	'@doublecalc' 

{ after(grammarAccess.getDoubleCalcPragmaAccess().getDoublecalcKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleCalcPragma__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleCalcPragma__Group__1__Impl
	rule__DoubleCalcPragma__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCalcPragma__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getDigitsKeyword_1()); }

	'digits' 

{ after(grammarAccess.getDoubleCalcPragmaAccess().getDigitsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleCalcPragma__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleCalcPragma__Group__2__Impl
	rule__DoubleCalcPragma__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCalcPragma__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getDoubleCalcPragmaAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleCalcPragma__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleCalcPragma__Group__3__Impl
	rule__DoubleCalcPragma__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCalcPragma__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getNum_digitsAssignment_3()); }
(rule__DoubleCalcPragma__Num_digitsAssignment_3)
{ after(grammarAccess.getDoubleCalcPragmaAccess().getNum_digitsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleCalcPragma__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleCalcPragma__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCalcPragma__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getGroup_4()); }
(rule__DoubleCalcPragma__Group_4__0)?
{ after(grammarAccess.getDoubleCalcPragmaAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DoubleCalcPragma__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleCalcPragma__Group_4__0__Impl
	rule__DoubleCalcPragma__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCalcPragma__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getRoundAssignment_4_0()); }
(rule__DoubleCalcPragma__RoundAssignment_4_0)
{ after(grammarAccess.getDoubleCalcPragmaAccess().getRoundAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleCalcPragma__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleCalcPragma__Group_4__1__Impl
	rule__DoubleCalcPragma__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCalcPragma__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getRounding_modeAssignment_4_1()); }
(rule__DoubleCalcPragma__Rounding_modeAssignment_4_1)
{ after(grammarAccess.getDoubleCalcPragmaAccess().getRounding_modeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleCalcPragma__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleCalcPragma__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCalcPragma__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getRightParenthesisKeyword_4_2()); }

	')' 

{ after(grammarAccess.getDoubleCalcPragmaAccess().getRightParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DumpResultPragma__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DumpResultPragma__Group__0__Impl
	rule__DumpResultPragma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DumpResultPragma__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDumpResultPragmaAccess().getDumpResultPragmaAction_0()); }
(

)
{ after(grammarAccess.getDumpResultPragmaAccess().getDumpResultPragmaAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DumpResultPragma__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DumpResultPragma__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DumpResultPragma__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDumpResultPragmaAccess().getDumpresKeyword_1()); }

	'@dumpres' 

{ after(grammarAccess.getDumpResultPragmaAccess().getDumpresKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__TimeDelayedQualifier__UnorderedGroup_6_1
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1());
    }
:
	rule__TimeDelayedQualifier__UnorderedGroup_6_1__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1());
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__UnorderedGroup_6_1__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTimeDelayedQualifierAccess().getImmResetAssignment_6_1_0()); }
						(rule__TimeDelayedQualifier__ImmResetAssignment_6_1_0)
						{ after(grammarAccess.getTimeDelayedQualifierAccess().getImmResetAssignment_6_1_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTimeDelayedQualifierAccess().getStrongResetAssignment_6_1_1()); }
						(rule__TimeDelayedQualifier__StrongResetAssignment_6_1_1)
						{ after(grammarAccess.getTimeDelayedQualifierAccess().getStrongResetAssignment_6_1_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1());
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__UnorderedGroup_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__UnorderedGroup_6_1__Impl
	rule__TimeDelayedQualifier__UnorderedGroup_6_1__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDelayedQualifier__UnorderedGroup_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDelayedQualifier__UnorderedGroup_6_1__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__OutputPragma__UnorderedGroup_3
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
    }
:
	rule__OutputPragma__UnorderedGroup_3__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}


rule__OutputPragma__UnorderedGroup_3__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getOutputPragmaAccess().getGroup_3_0()); }
						(rule__OutputPragma__Group_3_0__0)
						{ after(grammarAccess.getOutputPragmaAccess().getGroup_3_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getOutputPragmaAccess().getGroup_3_1()); }
						(rule__OutputPragma__Group_3_1__0)
						{ after(grammarAccess.getOutputPragmaAccess().getGroup_3_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getOutputPragmaAccess().getGroup_3_2()); }
						(rule__OutputPragma__Group_3_2__0)
						{ after(grammarAccess.getOutputPragmaAccess().getGroup_3_2()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getOutputPragmaAccess().getGroup_3_3()); }
						(rule__OutputPragma__Group_3_3__0)
						{ after(grammarAccess.getOutputPragmaAccess().getGroup_3_3()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 4);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getOutputPragmaAccess().getGroup_3_4()); }
						(rule__OutputPragma__Group_3_4__0)
						{ after(grammarAccess.getOutputPragmaAccess().getGroup_3_4()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 5);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getOutputPragmaAccess().getGroup_3_5()); }
						(rule__OutputPragma__Group_3_5__0)
						{ after(grammarAccess.getOutputPragmaAccess().getGroup_3_5()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 6);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getOutputPragmaAccess().getNodefcssAssignment_3_6()); }
						(rule__OutputPragma__NodefcssAssignment_3_6)
						{ after(grammarAccess.getOutputPragmaAccess().getNodefcssAssignment_3_6()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 7);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getOutputPragmaAccess().getGroup_3_7()); }
						(rule__OutputPragma__Group_3_7__0)
						{ after(grammarAccess.getOutputPragmaAccess().getGroup_3_7()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), 8);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getOutputPragmaAccess().getGroup_3_8()); }
						(rule__OutputPragma__Group_3_8__0)
						{ after(grammarAccess.getOutputPragmaAccess().getGroup_3_8()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}


rule__OutputPragma__UnorderedGroup_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__UnorderedGroup_3__Impl
	rule__OutputPragma__UnorderedGroup_3__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__UnorderedGroup_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__UnorderedGroup_3__Impl
	rule__OutputPragma__UnorderedGroup_3__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__UnorderedGroup_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__UnorderedGroup_3__Impl
	rule__OutputPragma__UnorderedGroup_3__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__UnorderedGroup_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__UnorderedGroup_3__Impl
	rule__OutputPragma__UnorderedGroup_3__4?
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__UnorderedGroup_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__UnorderedGroup_3__Impl
	rule__OutputPragma__UnorderedGroup_3__5?
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__UnorderedGroup_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__UnorderedGroup_3__Impl
	rule__OutputPragma__UnorderedGroup_3__6?
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__UnorderedGroup_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__UnorderedGroup_3__Impl
	rule__OutputPragma__UnorderedGroup_3__7?
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__UnorderedGroup_3__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__UnorderedGroup_3__Impl
	rule__OutputPragma__UnorderedGroup_3__8?
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputPragma__UnorderedGroup_3__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputPragma__UnorderedGroup_3__Impl
;
finally {
	restoreStackSize(stackSize);
}




















rule__Specification__DeclAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getDeclClockParserRuleCall_0_0()); }
	ruleClock{ after(grammarAccess.getSpecificationAccess().getDeclClockParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__RelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getRelRelationParserRuleCall_1_0()); }
	ruleRelation{ after(grammarAccess.getSpecificationAccess().getRelRelationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__LetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getLetLetParserRuleCall_2_0()); }
	ruleLet{ after(grammarAccess.getSpecificationAccess().getLetLetParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__PragmasAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getPragmasPragmaParserRuleCall_3_0()); }
	rulePragma{ after(grammarAccess.getSpecificationAccess().getPragmasPragmaParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Clock__NongreedyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockAccess().getNongreedyNongreedyKeyword_0_0()); }
(
{ before(grammarAccess.getClockAccess().getNongreedyNongreedyKeyword_0_0()); }

	'nongreedy' 

{ after(grammarAccess.getClockAccess().getNongreedyNongreedyKeyword_0_0()); }
)

{ after(grammarAccess.getClockAccess().getNongreedyNongreedyKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Clock__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockAccess().getTypeTypeEnumRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getClockAccess().getTypeTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Clock__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getClockAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Clock__QualAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockAccess().getQualClockQualifierParserRuleCall_3_0()); }
	ruleClockQualifier{ after(grammarAccess.getClockAccess().getQualClockQualifierParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicQualifier__PeriodAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPeriodicQualifierAccess().getPeriodExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getPeriodicQualifierAccess().getPeriodExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicQualifier__OffsetAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPeriodicQualifierAccess().getOffsetExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getPeriodicQualifierAccess().getOffsetExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SporadicQualifier__InstantsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSporadicQualifierAccess().getInstantsValueParserRuleCall_2_0_0()); }
	ruleValue{ after(grammarAccess.getSporadicQualifierAccess().getInstantsValueParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SporadicQualifier__InstantsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSporadicQualifierAccess().getInstantsExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getSporadicQualifierAccess().getInstantsExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRelation__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicationRelationAccess().getSourceClockCrossReference_0_0()); }
(
{ before(grammarAccess.getImplicationRelationAccess().getSourceClockIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getImplicationRelationAccess().getSourceClockIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getImplicationRelationAccess().getSourceClockCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRelation__QualAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicationRelationAccess().getQualImplicationQualifierParserRuleCall_1_0()); }
	ruleImplicationQualifier{ after(grammarAccess.getImplicationRelationAccess().getQualImplicationQualifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRelation__TargetAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicationRelationAccess().getTargetClockCrossReference_3_0()); }
(
{ before(grammarAccess.getImplicationRelationAccess().getTargetClockIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getImplicationRelationAccess().getTargetClockIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getImplicationRelationAccess().getTargetClockCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__MastersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getMastersClockCrossReference_1_0()); }
(
{ before(grammarAccess.getAwaitImplicationAccess().getMastersClockIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAwaitImplicationAccess().getMastersClockIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAwaitImplicationAccess().getMastersClockCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__WeakAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getWeakWeakKeyword_2_1_0_0()); }
(
{ before(grammarAccess.getAwaitImplicationAccess().getWeakWeakKeyword_2_1_0_0()); }

	'weak' 

{ after(grammarAccess.getAwaitImplicationAccess().getWeakWeakKeyword_2_1_0_0()); }
)

{ after(grammarAccess.getAwaitImplicationAccess().getWeakWeakKeyword_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__StrongAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getStrongStrongKeyword_2_1_1_0()); }
(
{ before(grammarAccess.getAwaitImplicationAccess().getStrongStrongKeyword_2_1_1_0()); }

	'strong' 

{ after(grammarAccess.getAwaitImplicationAccess().getStrongStrongKeyword_2_1_1_0()); }
)

{ after(grammarAccess.getAwaitImplicationAccess().getStrongStrongKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__ResetAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getResetClockCrossReference_2_4_0()); }
(
{ before(grammarAccess.getAwaitImplicationAccess().getResetClockIDTerminalRuleCall_2_4_0_1()); }
	RULE_ID{ after(grammarAccess.getAwaitImplicationAccess().getResetClockIDTerminalRuleCall_2_4_0_1()); }
)
{ after(grammarAccess.getAwaitImplicationAccess().getResetClockCrossReference_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitImplication__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitImplicationAccess().getTargetClockCrossReference_4_0()); }
(
{ before(grammarAccess.getAwaitImplicationAccess().getTargetClockIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getAwaitImplicationAccess().getTargetClockIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getAwaitImplicationAccess().getTargetClockCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilteredQualifier__PatternAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilteredQualifierAccess().getPatternPatternParserRuleCall_2_0()); }
	rulePattern{ after(grammarAccess.getFilteredQualifierAccess().getPatternPatternParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryQualifier__PeriodAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryQualifierAccess().getPeriodExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getEveryQualifierAccess().getPeriodExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryQualifier__OffAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryQualifierAccess().getOffStartingKeyword_2_0_0()); }
(
{ before(grammarAccess.getEveryQualifierAccess().getOffStartingKeyword_2_0_0()); }

	'starting' 

{ after(grammarAccess.getEveryQualifierAccess().getOffStartingKeyword_2_0_0()); }
)

{ after(grammarAccess.getEveryQualifierAccess().getOffStartingKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryQualifier__OffsetAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryQualifierAccess().getOffsetExpressionParserRuleCall_2_2_0()); }
	ruleExpression{ after(grammarAccess.getEveryQualifierAccess().getOffsetExpressionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__ImmediatelyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getImmediatelyImmediatelyKeyword_0_0()); }
(
{ before(grammarAccess.getDelayedQualifierAccess().getImmediatelyImmediatelyKeyword_0_0()); }

	'immediately' 

{ after(grammarAccess.getDelayedQualifierAccess().getImmediatelyImmediatelyKeyword_0_0()); }
)

{ after(grammarAccess.getDelayedQualifierAccess().getImmediatelyImmediatelyKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__CountAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getCountExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getDelayedQualifierAccess().getCountExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__ResetAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getResetWithKeyword_4_0_0()); }
(
{ before(grammarAccess.getDelayedQualifierAccess().getResetWithKeyword_4_0_0()); }

	'with' 

{ after(grammarAccess.getDelayedQualifierAccess().getResetWithKeyword_4_0_0()); }
)

{ after(grammarAccess.getDelayedQualifierAccess().getResetWithKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayedQualifier__ClockAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayedQualifierAccess().getClockClockCrossReference_6_0()); }
(
{ before(grammarAccess.getDelayedQualifierAccess().getClockClockIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getDelayedQualifierAccess().getClockClockIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getDelayedQualifierAccess().getClockClockCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SustainedQualifier__ImmediatelyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainedQualifierAccess().getImmediatelyImmediatelyKeyword_1_0()); }
(
{ before(grammarAccess.getSustainedQualifierAccess().getImmediatelyImmediatelyKeyword_1_0()); }

	'immediately' 

{ after(grammarAccess.getSustainedQualifierAccess().getImmediatelyImmediatelyKeyword_1_0()); }
)

{ after(grammarAccess.getSustainedQualifierAccess().getImmediatelyImmediatelyKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SustainedQualifier__StartClockAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainedQualifierAccess().getStartClockClockCrossReference_3_0()); }
(
{ before(grammarAccess.getSustainedQualifierAccess().getStartClockClockIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getSustainedQualifierAccess().getStartClockClockIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getSustainedQualifierAccess().getStartClockClockCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SustainedQualifier__EndClockAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainedQualifierAccess().getEndClockClockCrossReference_5_0()); }
(
{ before(grammarAccess.getSustainedQualifierAccess().getEndClockClockIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getSustainedQualifierAccess().getEndClockClockIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getSustainedQualifierAccess().getEndClockClockCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SustainedQualifier__WeaklyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainedQualifierAccess().getWeaklyWeaklyKeyword_6_0()); }
(
{ before(grammarAccess.getSustainedQualifierAccess().getWeaklyWeaklyKeyword_6_0()); }

	'weakly' 

{ after(grammarAccess.getSustainedQualifierAccess().getWeaklyWeaklyKeyword_6_0()); }
)

{ after(grammarAccess.getSustainedQualifierAccess().getWeaklyWeaklyKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__DelayAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getDelayExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getTimeDelayedQualifierAccess().getDelayExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__ClockAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getClockClockCrossReference_5_0()); }
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getClockClockIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getTimeDelayedQualifierAccess().getClockClockIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getTimeDelayedQualifierAccess().getClockClockCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__ResetAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getResetWithKeyword_6_0_0()); }
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getResetWithKeyword_6_0_0()); }

	'with' 

{ after(grammarAccess.getTimeDelayedQualifierAccess().getResetWithKeyword_6_0_0()); }
)

{ after(grammarAccess.getTimeDelayedQualifierAccess().getResetWithKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__ImmResetAssignment_6_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getImmResetImmediateKeyword_6_1_0_0()); }
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getImmResetImmediateKeyword_6_1_0_0()); }

	'immediate' 

{ after(grammarAccess.getTimeDelayedQualifierAccess().getImmResetImmediateKeyword_6_1_0_0()); }
)

{ after(grammarAccess.getTimeDelayedQualifierAccess().getImmResetImmediateKeyword_6_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__StrongResetAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getStrongResetStrongKeyword_6_1_1_0()); }
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getStrongResetStrongKeyword_6_1_1_0()); }

	'strong' 

{ after(grammarAccess.getTimeDelayedQualifierAccess().getStrongResetStrongKeyword_6_1_1_0()); }
)

{ after(grammarAccess.getTimeDelayedQualifierAccess().getStrongResetStrongKeyword_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDelayedQualifier__ResetClockAssignment_6_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getResetClockClockCrossReference_6_4_0()); }
(
{ before(grammarAccess.getTimeDelayedQualifierAccess().getResetClockClockIDTerminalRuleCall_6_4_0_1()); }
	RULE_ID{ after(grammarAccess.getTimeDelayedQualifierAccess().getResetClockClockIDTerminalRuleCall_6_4_0_1()); }
)
{ after(grammarAccess.getTimeDelayedQualifierAccess().getResetClockClockCrossReference_6_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Let__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetAccess().getTypeValueTypeEnumRuleCall_1_0()); }
	ruleValueType{ after(grammarAccess.getLetAccess().getTypeValueTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Let__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getLetAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Let__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetAccess().getValueExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getLetAccess().getValueExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__SignAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerValueAccess().getSignOpTermEnumRuleCall_0_0()); }
	ruleOpTerm{ after(grammarAccess.getIntegerValueAccess().getSignOpTermEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerValueAccess().getValueBIG_INTTerminalRuleCall_1_0()); }
	RULE_BIG_INT{ after(grammarAccess.getIntegerValueAccess().getValueBIG_INTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__SignAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalValueAccess().getSignOpTermEnumRuleCall_0_0()); }
	ruleOpTerm{ after(grammarAccess.getDecimalValueAccess().getSignOpTermEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalValueAccess().getValueBIG_DECIMALTerminalRuleCall_1_0()); }
	RULE_BIG_DECIMAL{ after(grammarAccess.getDecimalValueAccess().getValueBIG_DECIMALTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__SignAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatValueAccess().getSignOpTermEnumRuleCall_0_0()); }
	ruleOpTerm{ after(grammarAccess.getFloatValueAccess().getSignOpTermEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_1_0()); }
	RULE_FLOAT{ after(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RationalValue__SignAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationalValueAccess().getSignOpTermEnumRuleCall_0_0()); }
	ruleOpTerm{ after(grammarAccess.getRationalValueAccess().getSignOpTermEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RationalValue__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationalValueAccess().getValueRATIONALTerminalRuleCall_1_0()); }
	RULE_RATIONAL{ after(grammarAccess.getRationalValueAccess().getValueRATIONALTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetValue__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetValueAccess().getRefLetCrossReference_1_0()); }
(
{ before(grammarAccess.getLetValueAccess().getRefLetIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getLetValueAccess().getRefLetIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getLetValueAccess().getRefLetCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOpOpTermEnumRuleCall_1_1_0()); }
	ruleOpTerm{ after(grammarAccess.getTermAccess().getOpOpTermEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_2_0()); }
	ruleFactor{ after(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getOpOpFactEnumRuleCall_1_1_0()); }
	ruleOpFact{ after(grammarAccess.getFactorAccess().getOpOpFactEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getRightBasicExprParserRuleCall_1_2_0()); }
	ruleBasicExpr{ after(grammarAccess.getFactorAccess().getRightBasicExprParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntCast__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntCastAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getIntCastAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatCast__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatCastAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getFloatCastAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalCast__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalCastAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getDecimalCastAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RationalCast__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRationalCastAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getRationalCastAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenQualifier__NotAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenQualifierAccess().getNotNotKeyword_1_0()); }
(
{ before(grammarAccess.getWhenQualifierAccess().getNotNotKeyword_1_0()); }

	'not' 

{ after(grammarAccess.getWhenQualifierAccess().getNotNotKeyword_1_0()); }
)

{ after(grammarAccess.getWhenQualifierAccess().getNotNotKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenQualifier__ClockAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenQualifierAccess().getClockClockCrossReference_2_0()); }
(
{ before(grammarAccess.getWhenQualifierAccess().getClockClockIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getWhenQualifierAccess().getClockClockIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getWhenQualifierAccess().getClockClockCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NextQualifier__StrictAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextQualifierAccess().getStrictStrictlyKeyword_0_0()); }
(
{ before(grammarAccess.getNextQualifierAccess().getStrictStrictlyKeyword_0_0()); }

	'strictly' 

{ after(grammarAccess.getNextQualifierAccess().getStrictStrictlyKeyword_0_0()); }
)

{ after(grammarAccess.getNextQualifierAccess().getStrictStrictlyKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NextQualifier__ClockAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextQualifierAccess().getClockClockCrossReference_3_0()); }
(
{ before(grammarAccess.getNextQualifierAccess().getClockClockIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getNextQualifierAccess().getClockClockIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getNextQualifierAccess().getClockClockCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__SkipAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getSkipExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getPatternAccess().getSkipExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__KeepAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getKeepExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getPatternAccess().getKeepExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__RepAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getRepLeftParenthesisKeyword_3_0_0()); }
(
{ before(grammarAccess.getPatternAccess().getRepLeftParenthesisKeyword_3_0_0()); }

	'(' 

{ after(grammarAccess.getPatternAccess().getRepLeftParenthesisKeyword_3_0_0()); }
)

{ after(grammarAccess.getPatternAccess().getRepLeftParenthesisKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__RepskipAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getRepskipExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getPatternAccess().getRepskipExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__RepkeepAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getRepkeepExpressionParserRuleCall_3_3_0()); }
	ruleExpression{ after(grammarAccess.getPatternAccess().getRepkeepExpressionParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagRelation__ExprAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagRelationAccess().getExprTagExprParserRuleCall_0_2_0()); }
	ruleTagExpr{ after(grammarAccess.getTagRelationAccess().getExprTagExprParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagRelation__ExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagRelationAccess().getExprTagExprParserRuleCall_1_2_0()); }
	ruleTagExpr{ after(grammarAccess.getTagRelationAccess().getExprTagExprParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__ClockYAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getClockYClockCrossReference_1_0()); }
(
{ before(grammarAccess.getTagExprAccess().getClockYClockIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTagExprAccess().getClockYClockIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getTagExprAccess().getClockYClockCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__ValueAAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getValueAExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getTagExprAccess().getValueAExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__ClockXAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getClockXClockCrossReference_4_0()); }
(
{ before(grammarAccess.getTagExprAccess().getClockXClockIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getTagExprAccess().getClockXClockIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getTagExprAccess().getClockXClockCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__ValueNAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getValueNBasicExprParserRuleCall_5_1_0()); }
	ruleBasicExpr{ after(grammarAccess.getTagExprAccess().getValueNBasicExprParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagExpr__ValueBAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagExprAccess().getValueBExpressionParserRuleCall_6_1_0()); }
	ruleExpression{ after(grammarAccess.getTagExprAccess().getValueBExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StopPragma__ClockAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStopPragmaAccess().getClockClockCrossReference_2_0()); }
(
{ before(grammarAccess.getStopPragmaAccess().getClockClockIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getStopPragmaAccess().getClockClockIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getStopPragmaAccess().getClockClockCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagrefPragma__ClockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagrefPragmaAccess().getClockClockCrossReference_1_0()); }
(
{ before(grammarAccess.getTagrefPragmaAccess().getClockClockIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTagrefPragmaAccess().getClockClockIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getTagrefPragmaAccess().getClockClockCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TracePragma__KindsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracePragmaAccess().getKindsIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTracePragmaAccess().getKindsIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TracePragma__KindsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracePragmaAccess().getKindsIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getTracePragmaAccess().getKindsIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxstepPragma__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxstepPragmaAccess().getValueExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getMaxstepPragmaAccess().getValueExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getTypeAlternatives_2_0()); }
(rule__OutputPragma__TypeAlternatives_2_0)
{ after(grammarAccess.getOutputPragmaAccess().getTypeAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__SelectionAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getSelectionSelectKeyword_3_0_0_0()); }
(
{ before(grammarAccess.getOutputPragmaAccess().getSelectionSelectKeyword_3_0_0_0()); }

	'select' 

{ after(grammarAccess.getOutputPragmaAccess().getSelectionSelectKeyword_3_0_0_0()); }
)

{ after(grammarAccess.getOutputPragmaAccess().getSelectionSelectKeyword_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__SelectedClocksAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getSelectedClocksClockItemParserRuleCall_3_0_1_0()); }
	ruleClockItem{ after(grammarAccess.getOutputPragmaAccess().getSelectedClocksClockItemParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__SelectedClocksAssignment_3_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getSelectedClocksClockItemParserRuleCall_3_0_2_1_0()); }
	ruleClockItem{ after(grammarAccess.getOutputPragmaAccess().getSelectedClocksClockItemParserRuleCall_3_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__WindowAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getWindowFromKeyword_3_1_0_0()); }
(
{ before(grammarAccess.getOutputPragmaAccess().getWindowFromKeyword_3_1_0_0()); }

	'from' 

{ after(grammarAccess.getOutputPragmaAccess().getWindowFromKeyword_3_1_0_0()); }
)

{ after(grammarAccess.getOutputPragmaAccess().getWindowFromKeyword_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__FromAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getFromExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getOutputPragmaAccess().getFromExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__ToAssignment_3_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getToExpressionParserRuleCall_3_1_3_0()); }
	ruleExpression{ after(grammarAccess.getOutputPragmaAccess().getToExpressionParserRuleCall_3_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__LabelifAssignment_3_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getLabelifClockCrossReference_3_2_2_0()); }
(
{ before(grammarAccess.getOutputPragmaAccess().getLabelifClockIDTerminalRuleCall_3_2_2_0_1()); }
	RULE_ID{ after(grammarAccess.getOutputPragmaAccess().getLabelifClockIDTerminalRuleCall_3_2_2_0_1()); }
)
{ after(grammarAccess.getOutputPragmaAccess().getLabelifClockCrossReference_3_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__LabelifAssignment_3_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getLabelifClockCrossReference_3_2_3_1_0()); }
(
{ before(grammarAccess.getOutputPragmaAccess().getLabelifClockIDTerminalRuleCall_3_2_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getOutputPragmaAccess().getLabelifClockIDTerminalRuleCall_3_2_3_1_0_1()); }
)
{ after(grammarAccess.getOutputPragmaAccess().getLabelifClockCrossReference_3_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__XscaledAssignment_3_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getXscaledXscaleKeyword_3_3_0_0()); }
(
{ before(grammarAccess.getOutputPragmaAccess().getXscaledXscaleKeyword_3_3_0_0()); }

	'xscale' 

{ after(grammarAccess.getOutputPragmaAccess().getXscaledXscaleKeyword_3_3_0_0()); }
)

{ after(grammarAccess.getOutputPragmaAccess().getXscaledXscaleKeyword_3_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__XscaleAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getXscaleExpressionParserRuleCall_3_3_1_0()); }
	ruleExpression{ after(grammarAccess.getOutputPragmaAccess().getXscaleExpressionParserRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__BorderAssignment_3_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getBorderSTRINGTerminalRuleCall_3_4_2_0()); }
	RULE_STRING{ after(grammarAccess.getOutputPragmaAccess().getBorderSTRINGTerminalRuleCall_3_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__CssAssignment_3_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getCssSTRINGTerminalRuleCall_3_5_2_0()); }
	RULE_STRING{ after(grammarAccess.getOutputPragmaAccess().getCssSTRINGTerminalRuleCall_3_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__NodefcssAssignment_3_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getNodefcssNoDefaultCssKeyword_3_6_0()); }
(
{ before(grammarAccess.getOutputPragmaAccess().getNodefcssNoDefaultCssKeyword_3_6_0()); }

	'no-default-css' 

{ after(grammarAccess.getOutputPragmaAccess().getNodefcssNoDefaultCssKeyword_3_6_0()); }
)

{ after(grammarAccess.getOutputPragmaAccess().getNodefcssNoDefaultCssKeyword_3_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__JvsAssignment_3_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getJvsSTRINGTerminalRuleCall_3_7_2_0()); }
	RULE_STRING{ after(grammarAccess.getOutputPragmaAccess().getJvsSTRINGTerminalRuleCall_3_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__StandaloneAssignment_3_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getStandaloneStandaloneKeyword_3_8_0_0()); }
(
{ before(grammarAccess.getOutputPragmaAccess().getStandaloneStandaloneKeyword_3_8_0_0()); }

	'standalone' 

{ after(grammarAccess.getOutputPragmaAccess().getStandaloneStandaloneKeyword_3_8_0_0()); }
)

{ after(grammarAccess.getOutputPragmaAccess().getStandaloneStandaloneKeyword_3_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPragma__OverwriteAssignment_3_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPragmaAccess().getOverwriteOverwriteKeyword_3_8_1_0()); }
(
{ before(grammarAccess.getOutputPragmaAccess().getOverwriteOverwriteKeyword_3_8_1_0()); }

	'overwrite' 

{ after(grammarAccess.getOutputPragmaAccess().getOverwriteOverwriteKeyword_3_8_1_0()); }
)

{ after(grammarAccess.getOutputPragmaAccess().getOverwriteOverwriteKeyword_3_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClockItem__ClockAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockItemAccess().getClockClockCrossReference_0_0()); }
(
{ before(grammarAccess.getClockItemAccess().getClockClockIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getClockItemAccess().getClockClockIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getClockItemAccess().getClockClockCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClockItem__NewNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClockItemAccess().getNewNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getClockItemAccess().getNewNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCalcPragma__Num_digitsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getNum_digitsBIG_INTTerminalRuleCall_3_0()); }
	RULE_BIG_INT{ after(grammarAccess.getDoubleCalcPragmaAccess().getNum_digitsBIG_INTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCalcPragma__RoundAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getRoundLeftParenthesisKeyword_4_0_0()); }
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getRoundLeftParenthesisKeyword_4_0_0()); }

	'(' 

{ after(grammarAccess.getDoubleCalcPragmaAccess().getRoundLeftParenthesisKeyword_4_0_0()); }
)

{ after(grammarAccess.getDoubleCalcPragmaAccess().getRoundLeftParenthesisKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCalcPragma__Rounding_modeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleCalcPragmaAccess().getRounding_modeROUNDING_MODEEnumRuleCall_4_1_0()); }
	ruleROUNDING_MODE{ after(grammarAccess.getDoubleCalcPragmaAccess().getRounding_modeROUNDING_MODEEnumRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


fragment RULE_DIGIT : '0'..'9';

fragment RULE_SIGN : ('+'|'-');

fragment RULE_EXPONENT : ('e'|'E') RULE_SIGN? RULE_DIGIT+;

RULE_BIG_INT : RULE_DIGIT+;

RULE_FLOAT : (RULE_DIGIT+ '.' RULE_DIGIT* RULE_EXPONENT?|'.' RULE_DIGIT+ RULE_EXPONENT?|RULE_DIGIT+ RULE_EXPONENT) 'F';

RULE_BIG_DECIMAL : (RULE_DIGIT+ '.' RULE_DIGIT* RULE_EXPONENT?|'.' RULE_DIGIT+ RULE_EXPONENT?|RULE_DIGIT+ RULE_EXPONENT);

RULE_RATIONAL : '<' RULE_DIGIT+ '/' RULE_DIGIT+ '>';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_STRING : '"' ( options {greedy=false;} : . )*'"';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


