/*
 * generated by Xtext
 */
package fr.supelec.tesl.lang.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.supelec.tesl.lang.services.TESLGrammarAccess;

public class TESLParser extends AbstractContentAssistParser {
	
	@Inject
	private TESLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.supelec.tesl.lang.ui.contentassist.antlr.internal.InternalTESLParser createParser() {
		fr.supelec.tesl.lang.ui.contentassist.antlr.internal.InternalTESLParser result = new fr.supelec.tesl.lang.ui.contentassist.antlr.internal.InternalTESLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getSpecificationAccess().getAlternatives(), "rule__Specification__Alternatives");
					put(grammarAccess.getClockQualifierAccess().getAlternatives(), "rule__ClockQualifier__Alternatives");
					put(grammarAccess.getRelationAccess().getAlternatives(), "rule__Relation__Alternatives");
					put(grammarAccess.getAwaitImplicationAccess().getAlternatives_2_1(), "rule__AwaitImplication__Alternatives_2_1");
					put(grammarAccess.getImplicationQualifierAccess().getAlternatives(), "rule__ImplicationQualifier__Alternatives");
					put(grammarAccess.getValueAccess().getAlternatives(), "rule__Value__Alternatives");
					put(grammarAccess.getBasicExprAccess().getAlternatives(), "rule__BasicExpr__Alternatives");
					put(grammarAccess.getCastAccess().getAlternatives(), "rule__Cast__Alternatives");
					put(grammarAccess.getFloatCastAccess().getAlternatives_0(), "rule__FloatCast__Alternatives_0");
					put(grammarAccess.getTagRelationAccess().getAlternatives(), "rule__TagRelation__Alternatives");
					put(grammarAccess.getPragmaAccess().getAlternatives(), "rule__Pragma__Alternatives");
					put(grammarAccess.getOutputPragmaAccess().getTypeAlternatives_2_0(), "rule__OutputPragma__TypeAlternatives_2_0");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getValueTypeAccess().getAlternatives(), "rule__ValueType__Alternatives");
					put(grammarAccess.getOpTermAccess().getAlternatives(), "rule__OpTerm__Alternatives");
					put(grammarAccess.getOpFactAccess().getAlternatives(), "rule__OpFact__Alternatives");
					put(grammarAccess.getROUNDING_MODEAccess().getAlternatives(), "rule__ROUNDING_MODE__Alternatives");
					put(grammarAccess.getClockAccess().getGroup(), "rule__Clock__Group__0");
					put(grammarAccess.getPeriodicQualifierAccess().getGroup(), "rule__PeriodicQualifier__Group__0");
					put(grammarAccess.getPeriodicQualifierAccess().getGroup_2(), "rule__PeriodicQualifier__Group_2__0");
					put(grammarAccess.getSporadicQualifierAccess().getGroup(), "rule__SporadicQualifier__Group__0");
					put(grammarAccess.getSporadicQualifierAccess().getGroup_2(), "rule__SporadicQualifier__Group_2__0");
					put(grammarAccess.getSporadicQualifierAccess().getGroup_2_1(), "rule__SporadicQualifier__Group_2_1__0");
					put(grammarAccess.getImplicationRelationAccess().getGroup(), "rule__ImplicationRelation__Group__0");
					put(grammarAccess.getAwaitImplicationAccess().getGroup(), "rule__AwaitImplication__Group__0");
					put(grammarAccess.getAwaitImplicationAccess().getGroup_2(), "rule__AwaitImplication__Group_2__0");
					put(grammarAccess.getFilteredQualifierAccess().getGroup(), "rule__FilteredQualifier__Group__0");
					put(grammarAccess.getEveryQualifierAccess().getGroup(), "rule__EveryQualifier__Group__0");
					put(grammarAccess.getEveryQualifierAccess().getGroup_2(), "rule__EveryQualifier__Group_2__0");
					put(grammarAccess.getDelayedQualifierAccess().getGroup(), "rule__DelayedQualifier__Group__0");
					put(grammarAccess.getDelayedQualifierAccess().getGroup_4(), "rule__DelayedQualifier__Group_4__0");
					put(grammarAccess.getSustainedQualifierAccess().getGroup(), "rule__SustainedQualifier__Group__0");
					put(grammarAccess.getTimeDelayedQualifierAccess().getGroup(), "rule__TimeDelayedQualifier__Group__0");
					put(grammarAccess.getTimeDelayedQualifierAccess().getGroup_6(), "rule__TimeDelayedQualifier__Group_6__0");
					put(grammarAccess.getLetAccess().getGroup(), "rule__Let__Group__0");
					put(grammarAccess.getIntegerValueAccess().getGroup(), "rule__IntegerValue__Group__0");
					put(grammarAccess.getDecimalValueAccess().getGroup(), "rule__DecimalValue__Group__0");
					put(grammarAccess.getFloatValueAccess().getGroup(), "rule__FloatValue__Group__0");
					put(grammarAccess.getRationalValueAccess().getGroup(), "rule__RationalValue__Group__0");
					put(grammarAccess.getLetValueAccess().getGroup(), "rule__LetValue__Group__0");
					put(grammarAccess.getTermAccess().getGroup(), "rule__Term__Group__0");
					put(grammarAccess.getTermAccess().getGroup_1(), "rule__Term__Group_1__0");
					put(grammarAccess.getFactorAccess().getGroup(), "rule__Factor__Group__0");
					put(grammarAccess.getFactorAccess().getGroup_1(), "rule__Factor__Group_1__0");
					put(grammarAccess.getBasicExprAccess().getGroup_1(), "rule__BasicExpr__Group_1__0");
					put(grammarAccess.getIntCastAccess().getGroup(), "rule__IntCast__Group__0");
					put(grammarAccess.getFloatCastAccess().getGroup(), "rule__FloatCast__Group__0");
					put(grammarAccess.getDecimalCastAccess().getGroup(), "rule__DecimalCast__Group__0");
					put(grammarAccess.getRationalCastAccess().getGroup(), "rule__RationalCast__Group__0");
					put(grammarAccess.getWhenQualifierAccess().getGroup(), "rule__WhenQualifier__Group__0");
					put(grammarAccess.getNextQualifierAccess().getGroup(), "rule__NextQualifier__Group__0");
					put(grammarAccess.getPatternAccess().getGroup(), "rule__Pattern__Group__0");
					put(grammarAccess.getPatternAccess().getGroup_3(), "rule__Pattern__Group_3__0");
					put(grammarAccess.getTagRelationAccess().getGroup_0(), "rule__TagRelation__Group_0__0");
					put(grammarAccess.getTagRelationAccess().getGroup_1(), "rule__TagRelation__Group_1__0");
					put(grammarAccess.getTagExprAccess().getGroup(), "rule__TagExpr__Group__0");
					put(grammarAccess.getTagExprAccess().getGroup_3(), "rule__TagExpr__Group_3__0");
					put(grammarAccess.getTagExprAccess().getGroup_5(), "rule__TagExpr__Group_5__0");
					put(grammarAccess.getTagExprAccess().getGroup_6(), "rule__TagExpr__Group_6__0");
					put(grammarAccess.getStopPragmaAccess().getGroup(), "rule__StopPragma__Group__0");
					put(grammarAccess.getTagrefPragmaAccess().getGroup(), "rule__TagrefPragma__Group__0");
					put(grammarAccess.getTracePragmaAccess().getGroup(), "rule__TracePragma__Group__0");
					put(grammarAccess.getTracePragmaAccess().getGroup_2(), "rule__TracePragma__Group_2__0");
					put(grammarAccess.getMaxstepPragmaAccess().getGroup(), "rule__MaxstepPragma__Group__0");
					put(grammarAccess.getOutputPragmaAccess().getGroup(), "rule__OutputPragma__Group__0");
					put(grammarAccess.getOutputPragmaAccess().getGroup_3_0(), "rule__OutputPragma__Group_3_0__0");
					put(grammarAccess.getOutputPragmaAccess().getGroup_3_0_2(), "rule__OutputPragma__Group_3_0_2__0");
					put(grammarAccess.getOutputPragmaAccess().getGroup_3_1(), "rule__OutputPragma__Group_3_1__0");
					put(grammarAccess.getOutputPragmaAccess().getGroup_3_2(), "rule__OutputPragma__Group_3_2__0");
					put(grammarAccess.getOutputPragmaAccess().getGroup_3_2_3(), "rule__OutputPragma__Group_3_2_3__0");
					put(grammarAccess.getOutputPragmaAccess().getGroup_3_3(), "rule__OutputPragma__Group_3_3__0");
					put(grammarAccess.getOutputPragmaAccess().getGroup_3_4(), "rule__OutputPragma__Group_3_4__0");
					put(grammarAccess.getOutputPragmaAccess().getGroup_3_5(), "rule__OutputPragma__Group_3_5__0");
					put(grammarAccess.getOutputPragmaAccess().getGroup_3_7(), "rule__OutputPragma__Group_3_7__0");
					put(grammarAccess.getOutputPragmaAccess().getGroup_3_8(), "rule__OutputPragma__Group_3_8__0");
					put(grammarAccess.getClockItemAccess().getGroup(), "rule__ClockItem__Group__0");
					put(grammarAccess.getClockItemAccess().getGroup_1(), "rule__ClockItem__Group_1__0");
					put(grammarAccess.getDoubleCalcPragmaAccess().getGroup(), "rule__DoubleCalcPragma__Group__0");
					put(grammarAccess.getDoubleCalcPragmaAccess().getGroup_4(), "rule__DoubleCalcPragma__Group_4__0");
					put(grammarAccess.getDumpResultPragmaAccess().getGroup(), "rule__DumpResultPragma__Group__0");
					put(grammarAccess.getSpecificationAccess().getDeclAssignment_0(), "rule__Specification__DeclAssignment_0");
					put(grammarAccess.getSpecificationAccess().getRelAssignment_1(), "rule__Specification__RelAssignment_1");
					put(grammarAccess.getSpecificationAccess().getLetAssignment_2(), "rule__Specification__LetAssignment_2");
					put(grammarAccess.getSpecificationAccess().getPragmasAssignment_3(), "rule__Specification__PragmasAssignment_3");
					put(grammarAccess.getClockAccess().getNongreedyAssignment_0(), "rule__Clock__NongreedyAssignment_0");
					put(grammarAccess.getClockAccess().getTypeAssignment_1(), "rule__Clock__TypeAssignment_1");
					put(grammarAccess.getClockAccess().getNameAssignment_2(), "rule__Clock__NameAssignment_2");
					put(grammarAccess.getClockAccess().getQualAssignment_3(), "rule__Clock__QualAssignment_3");
					put(grammarAccess.getPeriodicQualifierAccess().getPeriodAssignment_1(), "rule__PeriodicQualifier__PeriodAssignment_1");
					put(grammarAccess.getPeriodicQualifierAccess().getOffsetAssignment_2_1(), "rule__PeriodicQualifier__OffsetAssignment_2_1");
					put(grammarAccess.getSporadicQualifierAccess().getInstantsAssignment_2_0(), "rule__SporadicQualifier__InstantsAssignment_2_0");
					put(grammarAccess.getSporadicQualifierAccess().getInstantsAssignment_2_1_1(), "rule__SporadicQualifier__InstantsAssignment_2_1_1");
					put(grammarAccess.getImplicationRelationAccess().getSourceAssignment_0(), "rule__ImplicationRelation__SourceAssignment_0");
					put(grammarAccess.getImplicationRelationAccess().getQualAssignment_1(), "rule__ImplicationRelation__QualAssignment_1");
					put(grammarAccess.getImplicationRelationAccess().getTargetAssignment_3(), "rule__ImplicationRelation__TargetAssignment_3");
					put(grammarAccess.getAwaitImplicationAccess().getMastersAssignment_1(), "rule__AwaitImplication__MastersAssignment_1");
					put(grammarAccess.getAwaitImplicationAccess().getWeakAssignment_2_1_0(), "rule__AwaitImplication__WeakAssignment_2_1_0");
					put(grammarAccess.getAwaitImplicationAccess().getStrongAssignment_2_1_1(), "rule__AwaitImplication__StrongAssignment_2_1_1");
					put(grammarAccess.getAwaitImplicationAccess().getResetAssignment_2_4(), "rule__AwaitImplication__ResetAssignment_2_4");
					put(grammarAccess.getAwaitImplicationAccess().getTargetAssignment_4(), "rule__AwaitImplication__TargetAssignment_4");
					put(grammarAccess.getFilteredQualifierAccess().getPatternAssignment_2(), "rule__FilteredQualifier__PatternAssignment_2");
					put(grammarAccess.getEveryQualifierAccess().getPeriodAssignment_1(), "rule__EveryQualifier__PeriodAssignment_1");
					put(grammarAccess.getEveryQualifierAccess().getOffAssignment_2_0(), "rule__EveryQualifier__OffAssignment_2_0");
					put(grammarAccess.getEveryQualifierAccess().getOffsetAssignment_2_2(), "rule__EveryQualifier__OffsetAssignment_2_2");
					put(grammarAccess.getDelayedQualifierAccess().getImmediatelyAssignment_0(), "rule__DelayedQualifier__ImmediatelyAssignment_0");
					put(grammarAccess.getDelayedQualifierAccess().getCountAssignment_3(), "rule__DelayedQualifier__CountAssignment_3");
					put(grammarAccess.getDelayedQualifierAccess().getResetAssignment_4_0(), "rule__DelayedQualifier__ResetAssignment_4_0");
					put(grammarAccess.getDelayedQualifierAccess().getClockAssignment_6(), "rule__DelayedQualifier__ClockAssignment_6");
					put(grammarAccess.getSustainedQualifierAccess().getImmediatelyAssignment_1(), "rule__SustainedQualifier__ImmediatelyAssignment_1");
					put(grammarAccess.getSustainedQualifierAccess().getStartClockAssignment_3(), "rule__SustainedQualifier__StartClockAssignment_3");
					put(grammarAccess.getSustainedQualifierAccess().getEndClockAssignment_5(), "rule__SustainedQualifier__EndClockAssignment_5");
					put(grammarAccess.getSustainedQualifierAccess().getWeaklyAssignment_6(), "rule__SustainedQualifier__WeaklyAssignment_6");
					put(grammarAccess.getTimeDelayedQualifierAccess().getDelayAssignment_3(), "rule__TimeDelayedQualifier__DelayAssignment_3");
					put(grammarAccess.getTimeDelayedQualifierAccess().getClockAssignment_5(), "rule__TimeDelayedQualifier__ClockAssignment_5");
					put(grammarAccess.getTimeDelayedQualifierAccess().getResetAssignment_6_0(), "rule__TimeDelayedQualifier__ResetAssignment_6_0");
					put(grammarAccess.getTimeDelayedQualifierAccess().getImmResetAssignment_6_1_0(), "rule__TimeDelayedQualifier__ImmResetAssignment_6_1_0");
					put(grammarAccess.getTimeDelayedQualifierAccess().getStrongResetAssignment_6_1_1(), "rule__TimeDelayedQualifier__StrongResetAssignment_6_1_1");
					put(grammarAccess.getTimeDelayedQualifierAccess().getResetClockAssignment_6_4(), "rule__TimeDelayedQualifier__ResetClockAssignment_6_4");
					put(grammarAccess.getLetAccess().getTypeAssignment_1(), "rule__Let__TypeAssignment_1");
					put(grammarAccess.getLetAccess().getNameAssignment_2(), "rule__Let__NameAssignment_2");
					put(grammarAccess.getLetAccess().getValueAssignment_4(), "rule__Let__ValueAssignment_4");
					put(grammarAccess.getIntegerValueAccess().getSignAssignment_0(), "rule__IntegerValue__SignAssignment_0");
					put(grammarAccess.getIntegerValueAccess().getValueAssignment_1(), "rule__IntegerValue__ValueAssignment_1");
					put(grammarAccess.getDecimalValueAccess().getSignAssignment_0(), "rule__DecimalValue__SignAssignment_0");
					put(grammarAccess.getDecimalValueAccess().getValueAssignment_1(), "rule__DecimalValue__ValueAssignment_1");
					put(grammarAccess.getFloatValueAccess().getSignAssignment_0(), "rule__FloatValue__SignAssignment_0");
					put(grammarAccess.getFloatValueAccess().getValueAssignment_1(), "rule__FloatValue__ValueAssignment_1");
					put(grammarAccess.getRationalValueAccess().getSignAssignment_0(), "rule__RationalValue__SignAssignment_0");
					put(grammarAccess.getRationalValueAccess().getValueAssignment_1(), "rule__RationalValue__ValueAssignment_1");
					put(grammarAccess.getLetValueAccess().getRefAssignment_1(), "rule__LetValue__RefAssignment_1");
					put(grammarAccess.getTermAccess().getOpAssignment_1_1(), "rule__Term__OpAssignment_1_1");
					put(grammarAccess.getTermAccess().getRightAssignment_1_2(), "rule__Term__RightAssignment_1_2");
					put(grammarAccess.getFactorAccess().getOpAssignment_1_1(), "rule__Factor__OpAssignment_1_1");
					put(grammarAccess.getFactorAccess().getRightAssignment_1_2(), "rule__Factor__RightAssignment_1_2");
					put(grammarAccess.getIntCastAccess().getExprAssignment_1(), "rule__IntCast__ExprAssignment_1");
					put(grammarAccess.getFloatCastAccess().getExprAssignment_1(), "rule__FloatCast__ExprAssignment_1");
					put(grammarAccess.getDecimalCastAccess().getExprAssignment_1(), "rule__DecimalCast__ExprAssignment_1");
					put(grammarAccess.getRationalCastAccess().getExprAssignment_1(), "rule__RationalCast__ExprAssignment_1");
					put(grammarAccess.getWhenQualifierAccess().getNotAssignment_1(), "rule__WhenQualifier__NotAssignment_1");
					put(grammarAccess.getWhenQualifierAccess().getClockAssignment_2(), "rule__WhenQualifier__ClockAssignment_2");
					put(grammarAccess.getNextQualifierAccess().getStrictAssignment_0(), "rule__NextQualifier__StrictAssignment_0");
					put(grammarAccess.getNextQualifierAccess().getClockAssignment_3(), "rule__NextQualifier__ClockAssignment_3");
					put(grammarAccess.getPatternAccess().getSkipAssignment_0(), "rule__Pattern__SkipAssignment_0");
					put(grammarAccess.getPatternAccess().getKeepAssignment_2(), "rule__Pattern__KeepAssignment_2");
					put(grammarAccess.getPatternAccess().getRepAssignment_3_0(), "rule__Pattern__RepAssignment_3_0");
					put(grammarAccess.getPatternAccess().getRepskipAssignment_3_1(), "rule__Pattern__RepskipAssignment_3_1");
					put(grammarAccess.getPatternAccess().getRepkeepAssignment_3_3(), "rule__Pattern__RepkeepAssignment_3_3");
					put(grammarAccess.getTagRelationAccess().getExprAssignment_0_2(), "rule__TagRelation__ExprAssignment_0_2");
					put(grammarAccess.getTagRelationAccess().getExprAssignment_1_2(), "rule__TagRelation__ExprAssignment_1_2");
					put(grammarAccess.getTagExprAccess().getClockYAssignment_1(), "rule__TagExpr__ClockYAssignment_1");
					put(grammarAccess.getTagExprAccess().getValueAAssignment_3_0(), "rule__TagExpr__ValueAAssignment_3_0");
					put(grammarAccess.getTagExprAccess().getClockXAssignment_4(), "rule__TagExpr__ClockXAssignment_4");
					put(grammarAccess.getTagExprAccess().getValueNAssignment_5_1(), "rule__TagExpr__ValueNAssignment_5_1");
					put(grammarAccess.getTagExprAccess().getValueBAssignment_6_1(), "rule__TagExpr__ValueBAssignment_6_1");
					put(grammarAccess.getStopPragmaAccess().getClockAssignment_2(), "rule__StopPragma__ClockAssignment_2");
					put(grammarAccess.getTagrefPragmaAccess().getClockAssignment_1(), "rule__TagrefPragma__ClockAssignment_1");
					put(grammarAccess.getTracePragmaAccess().getKindsAssignment_1(), "rule__TracePragma__KindsAssignment_1");
					put(grammarAccess.getTracePragmaAccess().getKindsAssignment_2_1(), "rule__TracePragma__KindsAssignment_2_1");
					put(grammarAccess.getMaxstepPragmaAccess().getValueAssignment_1(), "rule__MaxstepPragma__ValueAssignment_1");
					put(grammarAccess.getOutputPragmaAccess().getTypeAssignment_2(), "rule__OutputPragma__TypeAssignment_2");
					put(grammarAccess.getOutputPragmaAccess().getSelectionAssignment_3_0_0(), "rule__OutputPragma__SelectionAssignment_3_0_0");
					put(grammarAccess.getOutputPragmaAccess().getSelectedClocksAssignment_3_0_1(), "rule__OutputPragma__SelectedClocksAssignment_3_0_1");
					put(grammarAccess.getOutputPragmaAccess().getSelectedClocksAssignment_3_0_2_1(), "rule__OutputPragma__SelectedClocksAssignment_3_0_2_1");
					put(grammarAccess.getOutputPragmaAccess().getWindowAssignment_3_1_0(), "rule__OutputPragma__WindowAssignment_3_1_0");
					put(grammarAccess.getOutputPragmaAccess().getFromAssignment_3_1_1(), "rule__OutputPragma__FromAssignment_3_1_1");
					put(grammarAccess.getOutputPragmaAccess().getToAssignment_3_1_3(), "rule__OutputPragma__ToAssignment_3_1_3");
					put(grammarAccess.getOutputPragmaAccess().getLabelifAssignment_3_2_2(), "rule__OutputPragma__LabelifAssignment_3_2_2");
					put(grammarAccess.getOutputPragmaAccess().getLabelifAssignment_3_2_3_1(), "rule__OutputPragma__LabelifAssignment_3_2_3_1");
					put(grammarAccess.getOutputPragmaAccess().getXscaledAssignment_3_3_0(), "rule__OutputPragma__XscaledAssignment_3_3_0");
					put(grammarAccess.getOutputPragmaAccess().getXscaleAssignment_3_3_1(), "rule__OutputPragma__XscaleAssignment_3_3_1");
					put(grammarAccess.getOutputPragmaAccess().getBorderAssignment_3_4_2(), "rule__OutputPragma__BorderAssignment_3_4_2");
					put(grammarAccess.getOutputPragmaAccess().getCssAssignment_3_5_2(), "rule__OutputPragma__CssAssignment_3_5_2");
					put(grammarAccess.getOutputPragmaAccess().getNodefcssAssignment_3_6(), "rule__OutputPragma__NodefcssAssignment_3_6");
					put(grammarAccess.getOutputPragmaAccess().getJvsAssignment_3_7_2(), "rule__OutputPragma__JvsAssignment_3_7_2");
					put(grammarAccess.getOutputPragmaAccess().getStandaloneAssignment_3_8_0(), "rule__OutputPragma__StandaloneAssignment_3_8_0");
					put(grammarAccess.getOutputPragmaAccess().getOverwriteAssignment_3_8_1(), "rule__OutputPragma__OverwriteAssignment_3_8_1");
					put(grammarAccess.getClockItemAccess().getClockAssignment_0(), "rule__ClockItem__ClockAssignment_0");
					put(grammarAccess.getClockItemAccess().getNewNameAssignment_1_1(), "rule__ClockItem__NewNameAssignment_1_1");
					put(grammarAccess.getDoubleCalcPragmaAccess().getNum_digitsAssignment_3(), "rule__DoubleCalcPragma__Num_digitsAssignment_3");
					put(grammarAccess.getDoubleCalcPragmaAccess().getRoundAssignment_4_0(), "rule__DoubleCalcPragma__RoundAssignment_4_0");
					put(grammarAccess.getDoubleCalcPragmaAccess().getRounding_modeAssignment_4_1(), "rule__DoubleCalcPragma__Rounding_modeAssignment_4_1");
					put(grammarAccess.getTimeDelayedQualifierAccess().getUnorderedGroup_6_1(), "rule__TimeDelayedQualifier__UnorderedGroup_6_1");
					put(grammarAccess.getOutputPragmaAccess().getUnorderedGroup_3(), "rule__OutputPragma__UnorderedGroup_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.supelec.tesl.lang.ui.contentassist.antlr.internal.InternalTESLParser typedParser = (fr.supelec.tesl.lang.ui.contentassist.antlr.internal.InternalTESLParser) parser;
			typedParser.entryRuleSpecification();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TESLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TESLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
